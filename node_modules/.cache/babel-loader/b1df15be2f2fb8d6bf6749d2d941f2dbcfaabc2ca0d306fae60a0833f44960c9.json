{"ast":null,"code":"/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */ /* eslint-disable require-jsdoc, valid-jsdoc */var MapShim=function(){if(typeof Map!=='undefined'){return Map;}/**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */function getIndex(arr,key){var result=-1;arr.some(function(entry,index){if(entry[0]===key){result=index;return true;}return false;});return result;}return(/** @class */function(){function class_1(){this.__entries__=[];}Object.defineProperty(class_1.prototype,\"size\",{/**\r\n             * @returns {boolean}\r\n             */get:function get(){return this.__entries__.length;},enumerable:true,configurable:true});/**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */class_1.prototype.get=function(key){var index=getIndex(this.__entries__,key);var entry=this.__entries__[index];return entry&&entry[1];};/**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */class_1.prototype.set=function(key,value){var index=getIndex(this.__entries__,key);if(~index){this.__entries__[index][1]=value;}else{this.__entries__.push([key,value]);}};/**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */class_1.prototype.delete=function(key){var entries=this.__entries__;var index=getIndex(entries,key);if(~index){entries.splice(index,1);}};/**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */class_1.prototype.has=function(key){return!!~getIndex(this.__entries__,key);};/**\r\n         * @returns {void}\r\n         */class_1.prototype.clear=function(){this.__entries__.splice(0);};/**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */class_1.prototype.forEach=function(callback,ctx){if(ctx===void 0){ctx=null;}for(var _i=0,_a=this.__entries__;_i<_a.length;_i++){var entry=_a[_i];callback.call(ctx,entry[1],entry[0]);}};return class_1;}());}();/**\r\n * Detects whether window and document objects are available in current environment.\r\n */var isBrowser=typeof window!=='undefined'&&typeof document!=='undefined'&&window.document===document;// Returns global object of a current environment.\nvar global$1=function(){if(typeof global!=='undefined'&&global.Math===Math){return global;}if(typeof self!=='undefined'&&self.Math===Math){return self;}if(typeof window!=='undefined'&&window.Math===Math){return window;}// eslint-disable-next-line no-new-func\nreturn Function('return this')();}();/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */var requestAnimationFrame$1=function(){if(typeof requestAnimationFrame==='function'){// It's required to use a bounded function because IE sometimes throws\n// an \"Invalid calling object\" error if rAF is invoked without the global\n// object on the left hand side.\nreturn requestAnimationFrame.bind(global$1);}return function(callback){return setTimeout(function(){return callback(Date.now());},1000/60);};}();// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout=2;/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */function throttle(callback,delay){var leadingCall=false,trailingCall=false,lastCallTime=0;/**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */function resolvePending(){if(leadingCall){leadingCall=false;callback();}if(trailingCall){proxy();}}/**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */function timeoutCallback(){requestAnimationFrame$1(resolvePending);}/**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */function proxy(){var timeStamp=Date.now();if(leadingCall){// Reject immediately following calls.\nif(timeStamp-lastCallTime<trailingTimeout){return;}// Schedule new call to be in invoked when the pending one is resolved.\n// This is important for \"transitions\" which never actually start\n// immediately so there is a chance that we might miss one if change\n// happens amids the pending invocation.\ntrailingCall=true;}else{leadingCall=true;trailingCall=false;setTimeout(timeoutCallback,delay);}lastCallTime=timeStamp;}return proxy;}// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY=20;// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys=['top','right','bottom','left','width','height','size','weight'];// Check if MutationObserver is available.\nvar mutationObserverSupported=typeof MutationObserver!=='undefined';/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */var ResizeObserverController=/** @class */function(){/**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */function ResizeObserverController(){/**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */this.connected_=false;/**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */this.mutationEventsAdded_=false;/**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */this.mutationsObserver_=null;/**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */this.observers_=[];this.onTransitionEnd_=this.onTransitionEnd_.bind(this);this.refresh=throttle(this.refresh.bind(this),REFRESH_DELAY);}/**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */ResizeObserverController.prototype.addObserver=function(observer){if(!~this.observers_.indexOf(observer)){this.observers_.push(observer);}// Add listeners if they haven't been added yet.\nif(!this.connected_){this.connect_();}};/**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */ResizeObserverController.prototype.removeObserver=function(observer){var observers=this.observers_;var index=observers.indexOf(observer);// Remove observer if it's present in registry.\nif(~index){observers.splice(index,1);}// Remove listeners if controller has no connected observers.\nif(!observers.length&&this.connected_){this.disconnect_();}};/**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */ResizeObserverController.prototype.refresh=function(){var changesDetected=this.updateObservers_();// Continue running updates if changes have been detected as there might\n// be future ones caused by CSS transitions.\nif(changesDetected){this.refresh();}};/**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */ResizeObserverController.prototype.updateObservers_=function(){// Collect observers that have active observations.\nvar activeObservers=this.observers_.filter(function(observer){return observer.gatherActive(),observer.hasActive();});// Deliver notifications in a separate cycle in order to avoid any\n// collisions between observers, e.g. when multiple instances of\n// ResizeObserver are tracking the same element and the callback of one\n// of them changes content dimensions of the observed target. Sometimes\n// this may result in notifications being blocked for the rest of observers.\nactiveObservers.forEach(function(observer){return observer.broadcastActive();});return activeObservers.length>0;};/**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */ResizeObserverController.prototype.connect_=function(){// Do nothing if running in a non-browser environment or if listeners\n// have been already added.\nif(!isBrowser||this.connected_){return;}// Subscription to the \"Transitionend\" event is used as a workaround for\n// delayed transitions. This way it's possible to capture at least the\n// final state of an element.\ndocument.addEventListener('transitionend',this.onTransitionEnd_);window.addEventListener('resize',this.refresh);if(mutationObserverSupported){this.mutationsObserver_=new MutationObserver(this.refresh);this.mutationsObserver_.observe(document,{attributes:true,childList:true,characterData:true,subtree:true});}else{document.addEventListener('DOMSubtreeModified',this.refresh);this.mutationEventsAdded_=true;}this.connected_=true;};/**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */ResizeObserverController.prototype.disconnect_=function(){// Do nothing if running in a non-browser environment or if listeners\n// have been already removed.\nif(!isBrowser||!this.connected_){return;}document.removeEventListener('transitionend',this.onTransitionEnd_);window.removeEventListener('resize',this.refresh);if(this.mutationsObserver_){this.mutationsObserver_.disconnect();}if(this.mutationEventsAdded_){document.removeEventListener('DOMSubtreeModified',this.refresh);}this.mutationsObserver_=null;this.mutationEventsAdded_=false;this.connected_=false;};/**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */ResizeObserverController.prototype.onTransitionEnd_=function(_a){var _b=_a.propertyName,propertyName=_b===void 0?'':_b;// Detect whether transition may affect dimensions of an element.\nvar isReflowProperty=transitionKeys.some(function(key){return!!~propertyName.indexOf(key);});if(isReflowProperty){this.refresh();}};/**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */ResizeObserverController.getInstance=function(){if(!this.instance_){this.instance_=new ResizeObserverController();}return this.instance_;};/**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */ResizeObserverController.instance_=null;return ResizeObserverController;}();/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */var defineConfigurable=function defineConfigurable(target,props){for(var _i=0,_a=Object.keys(props);_i<_a.length;_i++){var key=_a[_i];Object.defineProperty(target,key,{value:props[key],enumerable:false,writable:false,configurable:true});}return target;};/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */var getWindowOf=function getWindowOf(target){// Assume that the element is an instance of Node, which means that it\n// has the \"ownerDocument\" property from which we can retrieve a\n// corresponding global object.\nvar ownerGlobal=target&&target.ownerDocument&&target.ownerDocument.defaultView;// Return the local global object if it's not possible extract one from\n// provided element.\nreturn ownerGlobal||global$1;};// Placeholder of an empty content rectangle.\nvar emptyRect=createRectInit(0,0,0,0);/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */function toFloat(value){return parseFloat(value)||0;}/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */function getBordersSize(styles){var positions=[];for(var _i=1;_i<arguments.length;_i++){positions[_i-1]=arguments[_i];}return positions.reduce(function(size,position){var value=styles['border-'+position+'-width'];return size+toFloat(value);},0);}/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */function getPaddings(styles){var positions=['top','right','bottom','left'];var paddings={};for(var _i=0,positions_1=positions;_i<positions_1.length;_i++){var position=positions_1[_i];var value=styles['padding-'+position];paddings[position]=toFloat(value);}return paddings;}/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */function getSVGContentRect(target){var bbox=target.getBBox();return createRectInit(0,0,bbox.width,bbox.height);}/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */function getHTMLElementContentRect(target){// Client width & height properties can't be\n// used exclusively as they provide rounded values.\nvar clientWidth=target.clientWidth,clientHeight=target.clientHeight;// By this condition we can catch all non-replaced inline, hidden and\n// detached elements. Though elements with width & height properties less\n// than 0.5 will be discarded as well.\n//\n// Without it we would need to implement separate methods for each of\n// those cases and it's not possible to perform a precise and performance\n// effective test for hidden elements. E.g. even jQuery's ':visible' filter\n// gives wrong results for elements with width & height less than 0.5.\nif(!clientWidth&&!clientHeight){return emptyRect;}var styles=getWindowOf(target).getComputedStyle(target);var paddings=getPaddings(styles);var horizPad=paddings.left+paddings.right;var vertPad=paddings.top+paddings.bottom;// Computed styles of width & height are being used because they are the\n// only dimensions available to JS that contain non-rounded values. It could\n// be possible to utilize the getBoundingClientRect if only it's data wasn't\n// affected by CSS transformations let alone paddings, borders and scroll bars.\nvar width=toFloat(styles.width),height=toFloat(styles.height);// Width & height include paddings and borders when the 'border-box' box\n// model is applied (except for IE).\nif(styles.boxSizing==='border-box'){// Following conditions are required to handle Internet Explorer which\n// doesn't include paddings and borders to computed CSS dimensions.\n//\n// We can say that if CSS dimensions + paddings are equal to the \"client\"\n// properties then it's either IE, and thus we don't need to subtract\n// anything, or an element merely doesn't have paddings/borders styles.\nif(Math.round(width+horizPad)!==clientWidth){width-=getBordersSize(styles,'left','right')+horizPad;}if(Math.round(height+vertPad)!==clientHeight){height-=getBordersSize(styles,'top','bottom')+vertPad;}}// Following steps can't be applied to the document's root element as its\n// client[Width/Height] properties represent viewport area of the window.\n// Besides, it's as well not necessary as the <html> itself neither has\n// rendered scroll bars nor it can be clipped.\nif(!isDocumentElement(target)){// In some browsers (only in Firefox, actually) CSS width & height\n// include scroll bars size which can be removed at this step as scroll\n// bars are the only difference between rounded dimensions + paddings\n// and \"client\" properties, though that is not always true in Chrome.\nvar vertScrollbar=Math.round(width+horizPad)-clientWidth;var horizScrollbar=Math.round(height+vertPad)-clientHeight;// Chrome has a rather weird rounding of \"client\" properties.\n// E.g. for an element with content width of 314.2px it sometimes gives\n// the client width of 315px and for the width of 314.7px it may give\n// 314px. And it doesn't happen all the time. So just ignore this delta\n// as a non-relevant.\nif(Math.abs(vertScrollbar)!==1){width-=vertScrollbar;}if(Math.abs(horizScrollbar)!==1){height-=horizScrollbar;}}return createRectInit(paddings.left,paddings.top,width,height);}/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */var isSVGGraphicsElement=function(){// Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n// interface.\nif(typeof SVGGraphicsElement!=='undefined'){return function(target){return target instanceof getWindowOf(target).SVGGraphicsElement;};}// If it's so, then check that element is at least an instance of the\n// SVGElement and that it has the \"getBBox\" method.\n// eslint-disable-next-line no-extra-parens\nreturn function(target){return target instanceof getWindowOf(target).SVGElement&&typeof target.getBBox==='function';};}();/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */function isDocumentElement(target){return target===getWindowOf(target).document.documentElement;}/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */function getContentRect(target){if(!isBrowser){return emptyRect;}if(isSVGGraphicsElement(target)){return getSVGContentRect(target);}return getHTMLElementContentRect(target);}/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */function createReadOnlyRect(_a){var x=_a.x,y=_a.y,width=_a.width,height=_a.height;// If DOMRectReadOnly is available use it as a prototype for the rectangle.\nvar Constr=typeof DOMRectReadOnly!=='undefined'?DOMRectReadOnly:Object;var rect=Object.create(Constr.prototype);// Rectangle's properties are not writable and non-enumerable.\ndefineConfigurable(rect,{x:x,y:y,width:width,height:height,top:y,right:x+width,bottom:height+y,left:x});return rect;}/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */function createRectInit(x,y,width,height){return{x:x,y:y,width:width,height:height};}/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */var ResizeObservation=/** @class */function(){/**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */function ResizeObservation(target){/**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */this.broadcastWidth=0;/**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */this.broadcastHeight=0;/**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */this.contentRect_=createRectInit(0,0,0,0);this.target=target;}/**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */ResizeObservation.prototype.isActive=function(){var rect=getContentRect(this.target);this.contentRect_=rect;return rect.width!==this.broadcastWidth||rect.height!==this.broadcastHeight;};/**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */ResizeObservation.prototype.broadcastRect=function(){var rect=this.contentRect_;this.broadcastWidth=rect.width;this.broadcastHeight=rect.height;return rect;};return ResizeObservation;}();var ResizeObserverEntry=/** @class */function(){/**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */function ResizeObserverEntry(target,rectInit){var contentRect=createReadOnlyRect(rectInit);// According to the specification following properties are not writable\n// and are also not enumerable in the native implementation.\n//\n// Property accessors are not being used as they'd require to define a\n// private WeakMap storage which may cause memory leaks in browsers that\n// don't support this type of collections.\ndefineConfigurable(this,{target:target,contentRect:contentRect});}return ResizeObserverEntry;}();var ResizeObserverSPI=/** @class */function(){/**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */function ResizeObserverSPI(callback,controller,callbackCtx){/**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */this.activeObservations_=[];/**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */this.observations_=new MapShim();if(typeof callback!=='function'){throw new TypeError('The callback provided as parameter 1 is not a function.');}this.callback_=callback;this.controller_=controller;this.callbackCtx_=callbackCtx;}/**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */ResizeObserverSPI.prototype.observe=function(target){if(!arguments.length){throw new TypeError('1 argument required, but only 0 present.');}// Do nothing if current environment doesn't have the Element interface.\nif(typeof Element==='undefined'||!(Element instanceof Object)){return;}if(!(target instanceof getWindowOf(target).Element)){throw new TypeError('parameter 1 is not of type \"Element\".');}var observations=this.observations_;// Do nothing if element is already being observed.\nif(observations.has(target)){return;}observations.set(target,new ResizeObservation(target));this.controller_.addObserver(this);// Force the update of observations.\nthis.controller_.refresh();};/**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */ResizeObserverSPI.prototype.unobserve=function(target){if(!arguments.length){throw new TypeError('1 argument required, but only 0 present.');}// Do nothing if current environment doesn't have the Element interface.\nif(typeof Element==='undefined'||!(Element instanceof Object)){return;}if(!(target instanceof getWindowOf(target).Element)){throw new TypeError('parameter 1 is not of type \"Element\".');}var observations=this.observations_;// Do nothing if element is not being observed.\nif(!observations.has(target)){return;}observations.delete(target);if(!observations.size){this.controller_.removeObserver(this);}};/**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */ResizeObserverSPI.prototype.disconnect=function(){this.clearActive();this.observations_.clear();this.controller_.removeObserver(this);};/**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */ResizeObserverSPI.prototype.gatherActive=function(){var _this=this;this.clearActive();this.observations_.forEach(function(observation){if(observation.isActive()){_this.activeObservations_.push(observation);}});};/**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */ResizeObserverSPI.prototype.broadcastActive=function(){// Do nothing if observer doesn't have active observations.\nif(!this.hasActive()){return;}var ctx=this.callbackCtx_;// Create ResizeObserverEntry instance for every active observation.\nvar entries=this.activeObservations_.map(function(observation){return new ResizeObserverEntry(observation.target,observation.broadcastRect());});this.callback_.call(ctx,entries,ctx);this.clearActive();};/**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */ResizeObserverSPI.prototype.clearActive=function(){this.activeObservations_.splice(0);};/**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */ResizeObserverSPI.prototype.hasActive=function(){return this.activeObservations_.length>0;};return ResizeObserverSPI;}();// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers=typeof WeakMap!=='undefined'?new WeakMap():new MapShim();/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */var ResizeObserver=/** @class */function(){/**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */function ResizeObserver(callback){if(!(this instanceof ResizeObserver)){throw new TypeError('Cannot call a class as a function.');}if(!arguments.length){throw new TypeError('1 argument required, but only 0 present.');}var controller=ResizeObserverController.getInstance();var observer=new ResizeObserverSPI(callback,controller,this);observers.set(this,observer);}return ResizeObserver;}();// Expose public methods of ResizeObserver.\n['observe','unobserve','disconnect'].forEach(function(method){ResizeObserver.prototype[method]=function(){var _a;return(_a=observers.get(this))[method].apply(_a,arguments);};});var index=function(){// Export existing implementation if available.\nif(typeof global$1.ResizeObserver!=='undefined'){return global$1.ResizeObserver;}return ResizeObserver;}();export default index;","map":{"version":3,"names":["MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","__entries__","Object","defineProperty","prototype","get","length","enumerable","configurable","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","call","isBrowser","window","document","global$1","global","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","throttle","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","changesDetected","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","isReflowProperty","getInstance","instance_","defineConfigurable","target","props","keys","writable","getWindowOf","ownerGlobal","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getPaddings","paddings","positions_1","getSVGContentRect","bbox","getBBox","width","height","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","horizPad","left","right","vertPad","top","bottom","boxSizing","round","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","documentElement","getContentRect","createReadOnlyRect","x","y","Constr","DOMRectReadOnly","rect","create","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","apply"],"sources":["/home/kubigor/projects/react/business_website/src/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"],"sourcesContent":["/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
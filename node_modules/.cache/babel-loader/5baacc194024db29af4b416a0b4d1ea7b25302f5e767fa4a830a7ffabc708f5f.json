{"ast":null,"code":"import _regeneratorRuntime from\"/home/kubigor/projects/business_website/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/kubigor/projects/business_website/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"/home/kubigor/projects/business_website/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _createClass from\"/home/kubigor/projects/business_website/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/home/kubigor/projects/business_website/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _inherits from\"/home/kubigor/projects/business_website/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/kubigor/projects/business_website/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _wrapNativeSuper from\"/home/kubigor/projects/business_website/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";import _slicedToArray from\"/home/kubigor/projects/business_website/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toArray from\"/home/kubigor/projects/business_website/node_modules/@babel/runtime/helpers/esm/toArray.js\";import _createForOfIteratorHelper from\"/home/kubigor/projects/business_website/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _toConsumableArray from\"/home/kubigor/projects/business_website/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";/**\n * @remix-run/router v1.6.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */var Action;(function(Action){/**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */Action[\"Pop\"]=\"POP\";/**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */Action[\"Push\"]=\"PUSH\";/**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */Action[\"Replace\"]=\"REPLACE\";})(Action||(Action={}));var PopStateEventType=\"popstate\";/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */function createMemoryHistory(options){if(options===void 0){options={};}var _options=options,_options$initialEntri=_options.initialEntries,initialEntries=_options$initialEntri===void 0?[\"/\"]:_options$initialEntri,initialIndex=_options.initialIndex,_options$v5Compat=_options.v5Compat,v5Compat=_options$v5Compat===void 0?false:_options$v5Compat;var entries;// Declare so we can access from createMemoryLocation\nentries=initialEntries.map(function(entry,index){return createMemoryLocation(entry,typeof entry===\"string\"?null:entry.state,index===0?\"default\":undefined);});var index=clampIndex(initialIndex==null?entries.length-1:initialIndex);var action=Action.Pop;var listener=null;function clampIndex(n){return Math.min(Math.max(n,0),entries.length-1);}function getCurrentLocation(){return entries[index];}function createMemoryLocation(to,state,key){if(state===void 0){state=null;}var location=createLocation(entries?getCurrentLocation().pathname:\"/\",to,state,key);warning(location.pathname.charAt(0)===\"/\",\"relative pathnames are not supported in memory history: \"+JSON.stringify(to));return location;}function createHref(to){return typeof to===\"string\"?to:createPath(to);}var history={get index(){return index;},get action(){return action;},get location(){return getCurrentLocation();},createHref:createHref,createURL:function createURL(to){return new URL(createHref(to),\"http://localhost\");},encodeLocation:function encodeLocation(to){var path=typeof to===\"string\"?parsePath(to):to;return{pathname:path.pathname||\"\",search:path.search||\"\",hash:path.hash||\"\"};},push:function push(to,state){action=Action.Push;var nextLocation=createMemoryLocation(to,state);index+=1;entries.splice(index,entries.length,nextLocation);if(v5Compat&&listener){listener({action:action,location:nextLocation,delta:1});}},replace:function replace(to,state){action=Action.Replace;var nextLocation=createMemoryLocation(to,state);entries[index]=nextLocation;if(v5Compat&&listener){listener({action:action,location:nextLocation,delta:0});}},go:function go(delta){action=Action.Pop;var nextIndex=clampIndex(index+delta);var nextLocation=entries[nextIndex];index=nextIndex;if(listener){listener({action:action,location:nextLocation,delta:delta});}},listen:function listen(fn){listener=fn;return function(){listener=null;};}};return history;}/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */function createBrowserHistory(options){if(options===void 0){options={};}function createBrowserLocation(window,globalHistory){var _window$location=window.location,pathname=_window$location.pathname,search=_window$location.search,hash=_window$location.hash;return createLocation(\"\",{pathname:pathname,search:search,hash:hash},// state defaults to `null` because `window.history.state` does\nglobalHistory.state&&globalHistory.state.usr||null,globalHistory.state&&globalHistory.state.key||\"default\");}function createBrowserHref(window,to){return typeof to===\"string\"?to:createPath(to);}return getUrlBasedHistory(createBrowserLocation,createBrowserHref,null,options);}/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */function createHashHistory(options){if(options===void 0){options={};}function createHashLocation(window,globalHistory){var _parsePath=parsePath(window.location.hash.substr(1)),_parsePath$pathname=_parsePath.pathname,pathname=_parsePath$pathname===void 0?\"/\":_parsePath$pathname,_parsePath$search=_parsePath.search,search=_parsePath$search===void 0?\"\":_parsePath$search,_parsePath$hash=_parsePath.hash,hash=_parsePath$hash===void 0?\"\":_parsePath$hash;return createLocation(\"\",{pathname:pathname,search:search,hash:hash},// state defaults to `null` because `window.history.state` does\nglobalHistory.state&&globalHistory.state.usr||null,globalHistory.state&&globalHistory.state.key||\"default\");}function createHashHref(window,to){var base=window.document.querySelector(\"base\");var href=\"\";if(base&&base.getAttribute(\"href\")){var url=window.location.href;var hashIndex=url.indexOf(\"#\");href=hashIndex===-1?url:url.slice(0,hashIndex);}return href+\"#\"+(typeof to===\"string\"?to:createPath(to));}function validateHashLocation(location,to){warning(location.pathname.charAt(0)===\"/\",\"relative pathnames are not supported in hash history.push(\"+JSON.stringify(to)+\")\");}return getUrlBasedHistory(createHashLocation,createHashHref,validateHashLocation,options);}function invariant(value,message){if(value===false||value===null||typeof value===\"undefined\"){throw new Error(message);}}function warning(cond,message){if(!cond){// eslint-disable-next-line no-console\nif(typeof console!==\"undefined\")console.warn(message);try{// Welcome to debugging history!\n//\n// This error is thrown as a convenience so you can more easily\n// find the source for a warning that appears in the console by\n// enabling \"pause on exceptions\" in your JavaScript debugger.\nthrow new Error(message);// eslint-disable-next-line no-empty\n}catch(e){}}}function createKey(){return Math.random().toString(36).substr(2,8);}/**\n * For browser-based histories, we combine the state and key into an object\n */function getHistoryState(location,index){return{usr:location.state,key:location.key,idx:index};}/**\n * Creates a Location object with a unique key from the given Path\n */function createLocation(current,to,state,key){if(state===void 0){state=null;}var location=_extends({pathname:typeof current===\"string\"?current:current.pathname,search:\"\",hash:\"\"},typeof to===\"string\"?parsePath(to):to,{state:state,// TODO: This could be cleaned up.  push/replace should probably just take\n// full Locations now and avoid the need to run through this flow at all\n// But that's a pretty big refactor to the current test suite so going to\n// keep as is for the time being and just let any incoming keys take precedence\nkey:to&&to.key||key||createKey()});return location;}/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */function createPath(_ref){var _ref$pathname=_ref.pathname,pathname=_ref$pathname===void 0?\"/\":_ref$pathname,_ref$search=_ref.search,search=_ref$search===void 0?\"\":_ref$search,_ref$hash=_ref.hash,hash=_ref$hash===void 0?\"\":_ref$hash;if(search&&search!==\"?\")pathname+=search.charAt(0)===\"?\"?search:\"?\"+search;if(hash&&hash!==\"#\")pathname+=hash.charAt(0)===\"#\"?hash:\"#\"+hash;return pathname;}/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */function parsePath(path){var parsedPath={};if(path){var hashIndex=path.indexOf(\"#\");if(hashIndex>=0){parsedPath.hash=path.substr(hashIndex);path=path.substr(0,hashIndex);}var searchIndex=path.indexOf(\"?\");if(searchIndex>=0){parsedPath.search=path.substr(searchIndex);path=path.substr(0,searchIndex);}if(path){parsedPath.pathname=path;}}return parsedPath;}function getUrlBasedHistory(getLocation,_createHref,validateLocation,options){if(options===void 0){options={};}var _options2=options,_options2$window=_options2.window,window=_options2$window===void 0?document.defaultView:_options2$window,_options2$v5Compat=_options2.v5Compat,v5Compat=_options2$v5Compat===void 0?false:_options2$v5Compat;var globalHistory=window.history;var action=Action.Pop;var listener=null;var index=getIndex();// Index should only be null when we initialize. If not, it's because the\n// user called history.pushState or history.replaceState directly, in which\n// case we should log a warning as it will result in bugs.\nif(index==null){index=0;globalHistory.replaceState(_extends({},globalHistory.state,{idx:index}),\"\");}function getIndex(){var state=globalHistory.state||{idx:null};return state.idx;}function handlePop(){action=Action.Pop;var nextIndex=getIndex();var delta=nextIndex==null?null:nextIndex-index;index=nextIndex;if(listener){listener({action:action,location:history.location,delta:delta});}}function push(to,state){action=Action.Push;var location=createLocation(history.location,to,state);if(validateLocation)validateLocation(location,to);index=getIndex()+1;var historyState=getHistoryState(location,index);var url=history.createHref(location);// try...catch because iOS limits us to 100 pushState calls :/\ntry{globalHistory.pushState(historyState,\"\",url);}catch(error){// They are going to lose state here, but there is no real\n// way to warn them about it since the page will refresh...\nwindow.location.assign(url);}if(v5Compat&&listener){listener({action:action,location:history.location,delta:1});}}function replace(to,state){action=Action.Replace;var location=createLocation(history.location,to,state);if(validateLocation)validateLocation(location,to);index=getIndex();var historyState=getHistoryState(location,index);var url=history.createHref(location);globalHistory.replaceState(historyState,\"\",url);if(v5Compat&&listener){listener({action:action,location:history.location,delta:0});}}function createURL(to){// window.location.origin is \"null\" (the literal string value) in Firefox\n// under certain conditions, notably when serving from a local HTML file\n// See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\nvar base=window.location.origin!==\"null\"?window.location.origin:window.location.href;var href=typeof to===\"string\"?to:createPath(to);invariant(base,\"No window.location.(origin|href) available to create URL for href: \"+href);return new URL(href,base);}var history={get action(){return action;},get location(){return getLocation(window,globalHistory);},listen:function listen(fn){if(listener){throw new Error(\"A history only accepts one active listener\");}window.addEventListener(PopStateEventType,handlePop);listener=fn;return function(){window.removeEventListener(PopStateEventType,handlePop);listener=null;};},createHref:function createHref(to){return _createHref(window,to);},createURL:createURL,encodeLocation:function encodeLocation(to){// Encode a Location the same way window.location would\nvar url=createURL(to);return{pathname:url.pathname,search:url.search,hash:url.hash};},push:push,replace:replace,go:function go(n){return globalHistory.go(n);}};return history;}//#endregion\nvar ResultType;(function(ResultType){ResultType[\"data\"]=\"data\";ResultType[\"deferred\"]=\"deferred\";ResultType[\"redirect\"]=\"redirect\";ResultType[\"error\"]=\"error\";})(ResultType||(ResultType={}));var immutableRouteKeys=new Set([\"lazy\",\"caseSensitive\",\"path\",\"id\",\"index\",\"children\"]);function isIndexRoute(route){return route.index===true;}// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes,mapRouteProperties,parentPath,manifest){if(parentPath===void 0){parentPath=[];}if(manifest===void 0){manifest={};}return routes.map(function(route,index){var treePath=[].concat(_toConsumableArray(parentPath),[index]);var id=typeof route.id===\"string\"?route.id:treePath.join(\"-\");invariant(route.index!==true||!route.children,\"Cannot specify children on an index route\");invariant(!manifest[id],\"Found a route id collision on id \\\"\"+id+\"\\\".  Route \"+\"id's must be globally unique within Data Router usages\");if(isIndexRoute(route)){var indexRoute=_extends({},route,mapRouteProperties(route),{id:id});manifest[id]=indexRoute;return indexRoute;}else{var pathOrLayoutRoute=_extends({},route,mapRouteProperties(route),{id:id,children:undefined});manifest[id]=pathOrLayoutRoute;if(route.children){pathOrLayoutRoute.children=convertRoutesToDataRoutes(route.children,mapRouteProperties,treePath,manifest);}return pathOrLayoutRoute;}});}/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */function matchRoutes(routes,locationArg,basename){if(basename===void 0){basename=\"/\";}var location=typeof locationArg===\"string\"?parsePath(locationArg):locationArg;var pathname=stripBasename(location.pathname||\"/\",basename);if(pathname==null){return null;}var branches=flattenRoutes(routes);rankRouteBranches(branches);var matches=null;for(var i=0;matches==null&&i<branches.length;++i){matches=matchRouteBranch(branches[i],// Incoming pathnames are generally encoded from either window.location\n// or from router.navigate, but we want to match against the unencoded\n// paths in the route definitions.  Memory router locations won't be\n// encoded here but there also shouldn't be anything to decode so this\n// should be a safe operation.  This avoids needing matchRoutes to be\n// history-aware.\nsafelyDecodeURI(pathname));}return matches;}function flattenRoutes(routes,branches,parentsMeta,parentPath){if(branches===void 0){branches=[];}if(parentsMeta===void 0){parentsMeta=[];}if(parentPath===void 0){parentPath=\"\";}var flattenRoute=function flattenRoute(route,index,relativePath){var meta={relativePath:relativePath===undefined?route.path||\"\":relativePath,caseSensitive:route.caseSensitive===true,childrenIndex:index,route:route};if(meta.relativePath.startsWith(\"/\")){invariant(meta.relativePath.startsWith(parentPath),\"Absolute route path \\\"\"+meta.relativePath+\"\\\" nested under path \"+(\"\\\"\"+parentPath+\"\\\" is not valid. An absolute child route path \")+\"must start with the combined path of all its parent routes.\");meta.relativePath=meta.relativePath.slice(parentPath.length);}var path=joinPaths([parentPath,meta.relativePath]);var routesMeta=parentsMeta.concat(meta);// Add the children before adding this route to the array so we traverse the\n// route tree depth-first and child routes appear before their parents in\n// the \"flattened\" version.\nif(route.children&&route.children.length>0){invariant(// Our types know better, but runtime JS may not!\n// @ts-expect-error\nroute.index!==true,\"Index routes must not have child routes. Please remove \"+(\"all child routes from route path \\\"\"+path+\"\\\".\"));flattenRoutes(route.children,branches,routesMeta,path);}// Routes without a path shouldn't ever match by themselves unless they are\n// index routes, so don't add them to the list of possible branches.\nif(route.path==null&&!route.index){return;}branches.push({path:path,score:computeScore(path,route.index),routesMeta:routesMeta});};routes.forEach(function(route,index){var _route$path;// coarse-grain check for optional params\nif(route.path===\"\"||!((_route$path=route.path)!=null&&_route$path.includes(\"?\"))){flattenRoute(route,index);}else{var _iterator=_createForOfIteratorHelper(explodeOptionalSegments(route.path)),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var exploded=_step.value;flattenRoute(route,index,exploded);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}});return branches;}/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */function explodeOptionalSegments(path){var segments=path.split(\"/\");if(segments.length===0)return[];var _segments=_toArray(segments),first=_segments[0],rest=_segments.slice(1);// Optional path segments are denoted by a trailing `?`\nvar isOptional=first.endsWith(\"?\");// Compute the corresponding required segment: `foo?` -> `foo`\nvar required=first.replace(/\\?$/,\"\");if(rest.length===0){// Intepret empty string as omitting an optional segment\n// `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\nreturn isOptional?[required,\"\"]:[required];}var restExploded=explodeOptionalSegments(rest.join(\"/\"));var result=[];// All child paths with the prefix.  Do this for all children before the\n// optional version for all children so we get consistent ordering where the\n// parent optional aspect is preferred as required.  Otherwise, we can get\n// child sections interspersed where deeper optional segments are higher than\n// parent optional segments, where for example, /:two would explodes _earlier_\n// then /:one.  By always including the parent as required _for all children_\n// first, we avoid this issue\nresult.push.apply(result,_toConsumableArray(restExploded.map(function(subpath){return subpath===\"\"?required:[required,subpath].join(\"/\");})));// Then if this is an optional value, add all child versions without\nif(isOptional){result.push.apply(result,_toConsumableArray(restExploded));}// for absolute paths, ensure `/` instead of empty segment\nreturn result.map(function(exploded){return path.startsWith(\"/\")&&exploded===\"\"?\"/\":exploded;});}function rankRouteBranches(branches){branches.sort(function(a,b){return a.score!==b.score?b.score-a.score// Higher score first\n:compareIndexes(a.routesMeta.map(function(meta){return meta.childrenIndex;}),b.routesMeta.map(function(meta){return meta.childrenIndex;}));});}var paramRe=/^:\\w+$/;var dynamicSegmentValue=3;var indexRouteValue=2;var emptySegmentValue=1;var staticSegmentValue=10;var splatPenalty=-2;var isSplat=function isSplat(s){return s===\"*\";};function computeScore(path,index){var segments=path.split(\"/\");var initialScore=segments.length;if(segments.some(isSplat)){initialScore+=splatPenalty;}if(index){initialScore+=indexRouteValue;}return segments.filter(function(s){return!isSplat(s);}).reduce(function(score,segment){return score+(paramRe.test(segment)?dynamicSegmentValue:segment===\"\"?emptySegmentValue:staticSegmentValue);},initialScore);}function compareIndexes(a,b){var siblings=a.length===b.length&&a.slice(0,-1).every(function(n,i){return n===b[i];});return siblings?// If two routes are siblings, we should try to match the earlier sibling\n// first. This allows people to have fine-grained control over the matching\n// behavior by simply putting routes with identical paths in the order they\n// want them tried.\na[a.length-1]-b[b.length-1]:// Otherwise, it doesn't really make sense to rank non-siblings by index,\n// so they sort equally.\n0;}function matchRouteBranch(branch,pathname){var routesMeta=branch.routesMeta;var matchedParams={};var matchedPathname=\"/\";var matches=[];for(var i=0;i<routesMeta.length;++i){var meta=routesMeta[i];var end=i===routesMeta.length-1;var remainingPathname=matchedPathname===\"/\"?pathname:pathname.slice(matchedPathname.length)||\"/\";var match=matchPath({path:meta.relativePath,caseSensitive:meta.caseSensitive,end:end},remainingPathname);if(!match)return null;Object.assign(matchedParams,match.params);var route=meta.route;matches.push({// TODO: Can this as be avoided?\nparams:matchedParams,pathname:joinPaths([matchedPathname,match.pathname]),pathnameBase:normalizePathname(joinPaths([matchedPathname,match.pathnameBase])),route:route});if(match.pathnameBase!==\"/\"){matchedPathname=joinPaths([matchedPathname,match.pathnameBase]);}}return matches;}/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */function generatePath(originalPath,params){if(params===void 0){params={};}var path=originalPath;if(path.endsWith(\"*\")&&path!==\"*\"&&!path.endsWith(\"/*\")){warning(false,\"Route path \\\"\"+path+\"\\\" will be treated as if it were \"+(\"\\\"\"+path.replace(/\\*$/,\"/*\")+\"\\\" because the `*` character must \")+\"always follow a `/` in the pattern. To get rid of this warning, \"+(\"please change the route path to \\\"\"+path.replace(/\\*$/,\"/*\")+\"\\\".\"));path=path.replace(/\\*$/,\"/*\");}// ensure `/` is added at the beginning if the path is absolute\nvar prefix=path.startsWith(\"/\")?\"/\":\"\";var segments=path.split(/\\/+/).map(function(segment,index,array){var isLastSegment=index===array.length-1;// only apply the splat if it's the last segment\nif(isLastSegment&&segment===\"*\"){var star=\"*\";var starParam=params[star];// Apply the splat\nreturn starParam;}var keyMatch=segment.match(/^:(\\w+)(\\??)$/);if(keyMatch){var _keyMatch=_slicedToArray(keyMatch,3),key=_keyMatch[1],optional=_keyMatch[2];var param=params[key];if(optional===\"?\"){return param==null?\"\":param;}if(param==null){invariant(false,\"Missing \\\":\"+key+\"\\\" param\");}return param;}// Remove any optional markers from optional static segments\nreturn segment.replace(/\\?$/g,\"\");})// Remove empty segments\n.filter(function(segment){return!!segment;});return prefix+segments.join(\"/\");}/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */function matchPath(pattern,pathname){if(typeof pattern===\"string\"){pattern={path:pattern,caseSensitive:false,end:true};}var _compilePath=compilePath(pattern.path,pattern.caseSensitive,pattern.end),_compilePath2=_slicedToArray(_compilePath,2),matcher=_compilePath2[0],paramNames=_compilePath2[1];var match=pathname.match(matcher);if(!match)return null;var matchedPathname=match[0];var pathnameBase=matchedPathname.replace(/(.)\\/+$/,\"$1\");var captureGroups=match.slice(1);var params=paramNames.reduce(function(memo,paramName,index){// We need to compute the pathnameBase here using the raw splat value\n// instead of using params[\"*\"] later because it will be decoded then\nif(paramName===\"*\"){var splatValue=captureGroups[index]||\"\";pathnameBase=matchedPathname.slice(0,matchedPathname.length-splatValue.length).replace(/(.)\\/+$/,\"$1\");}memo[paramName]=safelyDecodeURIComponent(captureGroups[index]||\"\",paramName);return memo;},{});return{params:params,pathname:matchedPathname,pathnameBase:pathnameBase,pattern:pattern};}function compilePath(path,caseSensitive,end){if(caseSensitive===void 0){caseSensitive=false;}if(end===void 0){end=true;}warning(path===\"*\"||!path.endsWith(\"*\")||path.endsWith(\"/*\"),\"Route path \\\"\"+path+\"\\\" will be treated as if it were \"+(\"\\\"\"+path.replace(/\\*$/,\"/*\")+\"\\\" because the `*` character must \")+\"always follow a `/` in the pattern. To get rid of this warning, \"+(\"please change the route path to \\\"\"+path.replace(/\\*$/,\"/*\")+\"\\\".\"));var paramNames=[];var regexpSource=\"^\"+path.replace(/\\/*\\*?$/,\"\")// Ignore trailing / and /*, we'll handle it below\n.replace(/^\\/*/,\"/\")// Make sure it has a leading /\n.replace(/[\\\\.*+^$?{}|()[\\]]/g,\"\\\\$&\")// Escape special regex chars\n.replace(/\\/:(\\w+)/g,function(_,paramName){paramNames.push(paramName);return\"/([^\\\\/]+)\";});if(path.endsWith(\"*\")){paramNames.push(\"*\");regexpSource+=path===\"*\"||path===\"/*\"?\"(.*)$\"// Already matched the initial /, just match the rest\n:\"(?:\\\\/(.+)|\\\\/*)$\";// Don't include the / in params[\"*\"]\n}else if(end){// When matching to the end, ignore trailing slashes\nregexpSource+=\"\\\\/*$\";}else if(path!==\"\"&&path!==\"/\"){// If our path is non-empty and contains anything beyond an initial slash,\n// then we have _some_ form of path in our regex so we should expect to\n// match only if we find the end of this path segment.  Look for an optional\n// non-captured trailing slash (to match a portion of the URL) or the end\n// of the path (if we've matched to the end).  We used to do this with a\n// word boundary but that gives false positives on routes like\n// /user-preferences since `-` counts as a word boundary.\nregexpSource+=\"(?:(?=\\\\/|$))\";}else;var matcher=new RegExp(regexpSource,caseSensitive?undefined:\"i\");return[matcher,paramNames];}function safelyDecodeURI(value){try{return decodeURI(value);}catch(error){warning(false,\"The URL path \\\"\"+value+\"\\\" could not be decoded because it is is a \"+\"malformed URL segment. This is probably due to a bad percent \"+(\"encoding (\"+error+\").\"));return value;}}function safelyDecodeURIComponent(value,paramName){try{return decodeURIComponent(value);}catch(error){warning(false,\"The value for the URL param \\\"\"+paramName+\"\\\" will not be decoded because\"+(\" the string \\\"\"+value+\"\\\" is a malformed URL segment. This is probably\")+(\" due to a bad percent encoding (\"+error+\").\"));return value;}}/**\n * @private\n */function stripBasename(pathname,basename){if(basename===\"/\")return pathname;if(!pathname.toLowerCase().startsWith(basename.toLowerCase())){return null;}// We want to leave trailing slash behavior in the user's control, so if they\n// specify a basename with a trailing slash, we should support it\nvar startIndex=basename.endsWith(\"/\")?basename.length-1:basename.length;var nextChar=pathname.charAt(startIndex);if(nextChar&&nextChar!==\"/\"){// pathname does not start with basename/\nreturn null;}return pathname.slice(startIndex)||\"/\";}/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */function resolvePath(to,fromPathname){if(fromPathname===void 0){fromPathname=\"/\";}var _ref3=typeof to===\"string\"?parsePath(to):to,toPathname=_ref3.pathname,_ref3$search=_ref3.search,search=_ref3$search===void 0?\"\":_ref3$search,_ref3$hash=_ref3.hash,hash=_ref3$hash===void 0?\"\":_ref3$hash;var pathname=toPathname?toPathname.startsWith(\"/\")?toPathname:resolvePathname(toPathname,fromPathname):fromPathname;return{pathname:pathname,search:normalizeSearch(search),hash:normalizeHash(hash)};}function resolvePathname(relativePath,fromPathname){var segments=fromPathname.replace(/\\/+$/,\"\").split(\"/\");var relativeSegments=relativePath.split(\"/\");relativeSegments.forEach(function(segment){if(segment===\"..\"){// Keep the root \"\" segment so the pathname starts at /\nif(segments.length>1)segments.pop();}else if(segment!==\".\"){segments.push(segment);}});return segments.length>1?segments.join(\"/\"):\"/\";}function getInvalidPathError(char,field,dest,path){return\"Cannot include a '\"+char+\"' character in a manually specified \"+(\"`to.\"+field+\"` field [\"+JSON.stringify(path)+\"].  Please separate it out to the \")+(\"`to.\"+dest+\"` field. Alternatively you may provide the full path as \")+\"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";}/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */function getPathContributingMatches(matches){return matches.filter(function(match,index){return index===0||match.route.path&&match.route.path.length>0;});}/**\n * @private\n */function resolveTo(toArg,routePathnames,locationPathname,isPathRelative){if(isPathRelative===void 0){isPathRelative=false;}var to;if(typeof toArg===\"string\"){to=parsePath(toArg);}else{to=_extends({},toArg);invariant(!to.pathname||!to.pathname.includes(\"?\"),getInvalidPathError(\"?\",\"pathname\",\"search\",to));invariant(!to.pathname||!to.pathname.includes(\"#\"),getInvalidPathError(\"#\",\"pathname\",\"hash\",to));invariant(!to.search||!to.search.includes(\"#\"),getInvalidPathError(\"#\",\"search\",\"hash\",to));}var isEmptyPath=toArg===\"\"||to.pathname===\"\";var toPathname=isEmptyPath?\"/\":to.pathname;var from;// Routing is relative to the current pathname if explicitly requested.\n//\n// If a pathname is explicitly provided in `to`, it should be relative to the\n// route context. This is explained in `Note on `<Link to>` values` in our\n// migration guide from v5 as a means of disambiguation between `to` values\n// that begin with `/` and those that do not. However, this is problematic for\n// `to` values that do not provide a pathname. `to` can simply be a search or\n// hash string, in which case we should assume that the navigation is relative\n// to the current location's pathname and *not* the route pathname.\nif(isPathRelative||toPathname==null){from=locationPathname;}else{var routePathnameIndex=routePathnames.length-1;if(toPathname.startsWith(\"..\")){var toSegments=toPathname.split(\"/\");// Each leading .. segment means \"go up one route\" instead of \"go up one\n// URL segment\".  This is a key difference from how <a href> works and a\n// major reason we call this a \"to\" value instead of a \"href\".\nwhile(toSegments[0]===\"..\"){toSegments.shift();routePathnameIndex-=1;}to.pathname=toSegments.join(\"/\");}// If there are more \"..\" segments than parent routes, resolve relative to\n// the root / URL.\nfrom=routePathnameIndex>=0?routePathnames[routePathnameIndex]:\"/\";}var path=resolvePath(to,from);// Ensure the pathname has a trailing slash if the original \"to\" had one\nvar hasExplicitTrailingSlash=toPathname&&toPathname!==\"/\"&&toPathname.endsWith(\"/\");// Or if this was a link to the current path which has a trailing slash\nvar hasCurrentTrailingSlash=(isEmptyPath||toPathname===\".\")&&locationPathname.endsWith(\"/\");if(!path.pathname.endsWith(\"/\")&&(hasExplicitTrailingSlash||hasCurrentTrailingSlash)){path.pathname+=\"/\";}return path;}/**\n * @private\n */function getToPathname(to){// Empty strings should be treated the same as / paths\nreturn to===\"\"||to.pathname===\"\"?\"/\":typeof to===\"string\"?parsePath(to).pathname:to.pathname;}/**\n * @private\n */var joinPaths=function joinPaths(paths){return paths.join(\"/\").replace(/\\/\\/+/g,\"/\");};/**\n * @private\n */var normalizePathname=function normalizePathname(pathname){return pathname.replace(/\\/+$/,\"\").replace(/^\\/*/,\"/\");};/**\n * @private\n */var normalizeSearch=function normalizeSearch(search){return!search||search===\"?\"?\"\":search.startsWith(\"?\")?search:\"?\"+search;};/**\n * @private\n */var normalizeHash=function normalizeHash(hash){return!hash||hash===\"#\"?\"\":hash.startsWith(\"#\")?hash:\"#\"+hash;};/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */var json=function json(data,init){if(init===void 0){init={};}var responseInit=typeof init===\"number\"?{status:init}:init;var headers=new Headers(responseInit.headers);if(!headers.has(\"Content-Type\")){headers.set(\"Content-Type\",\"application/json; charset=utf-8\");}return new Response(JSON.stringify(data),_extends({},responseInit,{headers:headers}));};var AbortedDeferredError=/*#__PURE__*/function(_Error){_inherits(AbortedDeferredError,_Error);var _super=_createSuper(AbortedDeferredError);function AbortedDeferredError(){_classCallCheck(this,AbortedDeferredError);return _super.apply(this,arguments);}return _createClass(AbortedDeferredError);}(/*#__PURE__*/_wrapNativeSuper(Error));var DeferredData=/*#__PURE__*/function(){function DeferredData(data,responseInit){var _this=this;_classCallCheck(this,DeferredData);this.pendingKeysSet=new Set();this.subscribers=new Set();this.deferredKeys=[];invariant(data&&typeof data===\"object\"&&!Array.isArray(data),\"defer() only accepts plain objects\");// Set up an AbortController + Promise we can race against to exit early\n// cancellation\nvar reject;this.abortPromise=new Promise(function(_,r){return reject=r;});this.controller=new AbortController();var onAbort=function onAbort(){return reject(new AbortedDeferredError(\"Deferred data aborted\"));};this.unlistenAbortSignal=function(){return _this.controller.signal.removeEventListener(\"abort\",onAbort);};this.controller.signal.addEventListener(\"abort\",onAbort);this.data=Object.entries(data).reduce(function(acc,_ref){var _ref4=_slicedToArray(_ref,2),key=_ref4[0],value=_ref4[1];return Object.assign(acc,_defineProperty({},key,_this.trackPromise(key,value)));},{});if(this.done){// All incoming values were resolved\nthis.unlistenAbortSignal();}this.init=responseInit;}_createClass(DeferredData,[{key:\"trackPromise\",value:function trackPromise(key,value){var _this2=this;if(!(value instanceof Promise)){return value;}this.deferredKeys.push(key);this.pendingKeysSet.add(key);// We store a little wrapper promise that will be extended with\n// _data/_error props upon resolve/reject\nvar promise=Promise.race([value,this.abortPromise]).then(function(data){return _this2.onSettle(promise,key,null,data);},function(error){return _this2.onSettle(promise,key,error);});// Register rejection listeners to avoid uncaught promise rejections on\n// errors or aborted deferred values\npromise.catch(function(){});Object.defineProperty(promise,\"_tracked\",{get:function get(){return true;}});return promise;}},{key:\"onSettle\",value:function onSettle(promise,key,error,data){if(this.controller.signal.aborted&&error instanceof AbortedDeferredError){this.unlistenAbortSignal();Object.defineProperty(promise,\"_error\",{get:function get(){return error;}});return Promise.reject(error);}this.pendingKeysSet.delete(key);if(this.done){// Nothing left to abort!\nthis.unlistenAbortSignal();}if(error){Object.defineProperty(promise,\"_error\",{get:function get(){return error;}});this.emit(false,key);return Promise.reject(error);}Object.defineProperty(promise,\"_data\",{get:function get(){return data;}});this.emit(false,key);return data;}},{key:\"emit\",value:function emit(aborted,settledKey){this.subscribers.forEach(function(subscriber){return subscriber(aborted,settledKey);});}},{key:\"subscribe\",value:function subscribe(fn){var _this3=this;this.subscribers.add(fn);return function(){return _this3.subscribers.delete(fn);};}},{key:\"cancel\",value:function cancel(){var _this4=this;this.controller.abort();this.pendingKeysSet.forEach(function(v,k){return _this4.pendingKeysSet.delete(k);});this.emit(true);}},{key:\"resolveData\",value:function(){var _resolveData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(signal){var _this5=this;var aborted,onAbort;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:aborted=false;if(this.done){_context.next=7;break;}onAbort=function onAbort(){return _this5.cancel();};signal.addEventListener(\"abort\",onAbort);_context.next=6;return new Promise(function(resolve){_this5.subscribe(function(aborted){signal.removeEventListener(\"abort\",onAbort);if(aborted||_this5.done){resolve(aborted);}});});case 6:aborted=_context.sent;case 7:return _context.abrupt(\"return\",aborted);case 8:case\"end\":return _context.stop();}},_callee,this);}));function resolveData(_x){return _resolveData.apply(this,arguments);}return resolveData;}()},{key:\"done\",get:function get(){return this.pendingKeysSet.size===0;}},{key:\"unwrappedData\",get:function get(){invariant(this.data!==null&&this.done,\"Can only unwrap data on initialized and settled deferreds\");return Object.entries(this.data).reduce(function(acc,_ref2){var _ref5=_slicedToArray(_ref2,2),key=_ref5[0],value=_ref5[1];return Object.assign(acc,_defineProperty({},key,unwrapTrackedPromise(value)));},{});}},{key:\"pendingKeys\",get:function get(){return Array.from(this.pendingKeysSet);}}]);return DeferredData;}();function isTrackedPromise(value){return value instanceof Promise&&value._tracked===true;}function unwrapTrackedPromise(value){if(!isTrackedPromise(value)){return value;}if(value._error){throw value._error;}return value._data;}var defer=function defer(data,init){if(init===void 0){init={};}var responseInit=typeof init===\"number\"?{status:init}:init;return new DeferredData(data,responseInit);};/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */var redirect=function redirect(url,init){if(init===void 0){init=302;}var responseInit=init;if(typeof responseInit===\"number\"){responseInit={status:responseInit};}else if(typeof responseInit.status===\"undefined\"){responseInit.status=302;}var headers=new Headers(responseInit.headers);headers.set(\"Location\",url);return new Response(null,_extends({},responseInit,{headers:headers}));};/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */var ErrorResponse=/*#__PURE__*/_createClass(function ErrorResponse(status,statusText,data,internal){_classCallCheck(this,ErrorResponse);if(internal===void 0){internal=false;}this.status=status;this.statusText=statusText||\"\";this.internal=internal;if(data instanceof Error){this.data=data.toString();this.error=data;}else{this.data=data;}});/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */function isRouteErrorResponse(error){return error!=null&&typeof error.status===\"number\"&&typeof error.statusText===\"string\"&&typeof error.internal===\"boolean\"&&\"data\"in error;}var validMutationMethodsArr=[\"post\",\"put\",\"patch\",\"delete\"];var validMutationMethods=new Set(validMutationMethodsArr);var validRequestMethodsArr=[\"get\"].concat(validMutationMethodsArr);var validRequestMethods=new Set(validRequestMethodsArr);var redirectStatusCodes=new Set([301,302,303,307,308]);var redirectPreserveMethodStatusCodes=new Set([307,308]);var IDLE_NAVIGATION={state:\"idle\",location:undefined,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined};var IDLE_FETCHER={state:\"idle\",data:undefined,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined};var IDLE_BLOCKER={state:\"unblocked\",proceed:undefined,reset:undefined,location:undefined};var ABSOLUTE_URL_REGEX=/^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;var isBrowser=typeof window!==\"undefined\"&&typeof window.document!==\"undefined\"&&typeof window.document.createElement!==\"undefined\";var isServer=!isBrowser;var defaultMapRouteProperties=function defaultMapRouteProperties(route){return{hasErrorBoundary:Boolean(route.hasErrorBoundary)};};//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */function createRouter(init){invariant(init.routes.length>0,\"You must provide a non-empty routes array to createRouter\");var mapRouteProperties;if(init.mapRouteProperties){mapRouteProperties=init.mapRouteProperties;}else if(init.detectErrorBoundary){// If they are still using the deprecated version, wrap it with the new API\nvar detectErrorBoundary=init.detectErrorBoundary;mapRouteProperties=function mapRouteProperties(route){return{hasErrorBoundary:detectErrorBoundary(route)};};}else{mapRouteProperties=defaultMapRouteProperties;}// Routes keyed by ID\nvar manifest={};// Routes in tree format for matching\nvar dataRoutes=convertRoutesToDataRoutes(init.routes,mapRouteProperties,undefined,manifest);var inFlightDataRoutes;var basename=init.basename||\"/\";// Config driven behavior flags\nvar future=_extends({v7_normalizeFormMethod:false,v7_prependBasename:false},init.future);// Cleanup function for history\nvar unlistenHistory=null;// Externally-provided functions to call on all state changes\nvar subscribers=new Set();// Externally-provided object to hold scroll restoration locations during routing\nvar savedScrollPositions=null;// Externally-provided function to get scroll restoration keys\nvar getScrollRestorationKey=null;// Externally-provided function to get current scroll position\nvar getScrollPosition=null;// One-time flag to control the initial hydration scroll restoration.  Because\n// we don't get the saved positions from <ScrollRestoration /> until _after_\n// the initial render, we need to manually trigger a separate updateState to\n// send along the restoreScrollPosition\n// Set to true if we have `hydrationData` since we assume we were SSR'd and that\n// SSR did the initial scroll restoration.\nvar initialScrollRestored=init.hydrationData!=null;var initialMatches=matchRoutes(dataRoutes,init.history.location,basename);var initialErrors=null;if(initialMatches==null){// If we do not match a user-provided-route, fall back to the root\n// to allow the error boundary to take over\nvar error=getInternalRouterError(404,{pathname:init.history.location.pathname});var _getShortCircuitMatch=getShortCircuitMatches(dataRoutes),matches=_getShortCircuitMatch.matches,route=_getShortCircuitMatch.route;initialMatches=matches;initialErrors=_defineProperty({},route.id,error);}var initialized=// All initialMatches need to be loaded before we're ready.  If we have lazy\n// functions around still then we'll need to run them in initialize()\n!initialMatches.some(function(m){return m.route.lazy;})&&(// And we have to either have no loaders or have been provided hydrationData\n!initialMatches.some(function(m){return m.route.loader;})||init.hydrationData!=null);var router;var state={historyAction:init.history.action,location:init.history.location,matches:initialMatches,initialized:initialized,navigation:IDLE_NAVIGATION,// Don't restore on initial updateState() if we were SSR'd\nrestoreScrollPosition:init.hydrationData!=null?false:null,preventScrollReset:false,revalidation:\"idle\",loaderData:init.hydrationData&&init.hydrationData.loaderData||{},actionData:init.hydrationData&&init.hydrationData.actionData||null,errors:init.hydrationData&&init.hydrationData.errors||initialErrors,fetchers:new Map(),blockers:new Map()};// -- Stateful internal variables to manage navigations --\n// Current navigation in progress (to be committed in completeNavigation)\nvar pendingAction=Action.Pop;// Should the current navigation prevent the scroll reset if scroll cannot\n// be restored?\nvar pendingPreventScrollReset=false;// AbortController for the active navigation\nvar pendingNavigationController;// We use this to avoid touching history in completeNavigation if a\n// revalidation is entirely uninterrupted\nvar isUninterruptedRevalidation=false;// Use this internal flag to force revalidation of all loaders:\n//  - submissions (completed or interrupted)\n//  - useRevalidator()\n//  - X-Remix-Revalidate (from redirect)\nvar isRevalidationRequired=false;// Use this internal array to capture routes that require revalidation due\n// to a cancelled deferred on action submission\nvar cancelledDeferredRoutes=[];// Use this internal array to capture fetcher loads that were cancelled by an\n// action navigation and require revalidation\nvar cancelledFetcherLoads=[];// AbortControllers for any in-flight fetchers\nvar fetchControllers=new Map();// Track loads based on the order in which they started\nvar incrementingLoadId=0;// Track the outstanding pending navigation data load to be compared against\n// the globally incrementing load when a fetcher load lands after a completed\n// navigation\nvar pendingNavigationLoadId=-1;// Fetchers that triggered data reloads as a result of their actions\nvar fetchReloadIds=new Map();// Fetchers that triggered redirect navigations\nvar fetchRedirectIds=new Set();// Most recent href/match for fetcher.load calls for fetchers\nvar fetchLoadMatches=new Map();// Store DeferredData instances for active route matches.  When a\n// route loader returns defer() we stick one in here.  Then, when a nested\n// promise resolves we update loaderData.  If a new navigation starts we\n// cancel active deferreds for eliminated routes.\nvar activeDeferreds=new Map();// Store blocker functions in a separate Map outside of router state since\n// we don't need to update UI state if they change\nvar blockerFunctions=new Map();// Flag to ignore the next history update, so we can revert the URL change on\n// a POP navigation that was blocked by the user without touching router state\nvar ignoreNextHistoryUpdate=false;// Initialize the router, all side effects should be kicked off from here.\n// Implemented as a Fluent API for ease of:\n//   let router = createRouter(init).initialize();\nfunction initialize(){// If history informs us of a POP navigation, start the navigation but do not update\n// state.  We'll update our own state once the navigation completes\nunlistenHistory=init.history.listen(function(_ref){var historyAction=_ref.action,location=_ref.location,delta=_ref.delta;// Ignore this event if it was just us resetting the URL from a\n// blocked POP navigation\nif(ignoreNextHistoryUpdate){ignoreNextHistoryUpdate=false;return;}warning(blockerFunctions.size===0||delta!=null,\"You are trying to use a blocker on a POP navigation to a location \"+\"that was not created by @remix-run/router. This will fail silently in \"+\"production. This can happen if you are navigating outside the router \"+\"via `window.history.pushState`/`window.location.hash` instead of using \"+\"router navigation APIs.  This can also happen if you are using \"+\"createHashRouter and the user manually changes the URL.\");var blockerKey=shouldBlockNavigation({currentLocation:state.location,nextLocation:location,historyAction:historyAction});if(blockerKey&&delta!=null){// Restore the URL to match the current UI, but don't update router state\nignoreNextHistoryUpdate=true;init.history.go(delta*-1);// Put the blocker into a blocked state\nupdateBlocker(blockerKey,{state:\"blocked\",location:location,proceed:function proceed(){updateBlocker(blockerKey,{state:\"proceeding\",proceed:undefined,reset:undefined,location:location});// Re-do the same POP navigation we just blocked\ninit.history.go(delta);},reset:function reset(){deleteBlocker(blockerKey);updateState({blockers:new Map(router.state.blockers)});}});return;}return startNavigation(historyAction,location);});// Kick off initial data load if needed.  Use Pop to avoid modifying history\n// Note we don't do any handling of lazy here.  For SPA's it'll get handled\n// in the normal navigation flow.  For SSR it's expected that lazy modules are\n// resolved prior to router creation since we can't go into a fallbackElement\n// UI for SSR'd apps\nif(!state.initialized){startNavigation(Action.Pop,state.location);}return router;}// Clean up a router and it's side effects\nfunction dispose(){if(unlistenHistory){unlistenHistory();}subscribers.clear();pendingNavigationController&&pendingNavigationController.abort();state.fetchers.forEach(function(_,key){return deleteFetcher(key);});state.blockers.forEach(function(_,key){return deleteBlocker(key);});}// Subscribe to state updates for the router\nfunction subscribe(fn){subscribers.add(fn);return function(){return subscribers.delete(fn);};}// Update our state and notify the calling context of the change\nfunction updateState(newState){state=_extends({},state,newState);subscribers.forEach(function(subscriber){return subscriber(state);});}// Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n// and setting state.[historyAction/location/matches] to the new route.\n// - Location is a required param\n// - Navigation will always be set to IDLE_NAVIGATION\n// - Can pass any other state in newState\nfunction completeNavigation(location,newState){var _location$state,_location$state2;// Deduce if we're in a loading/actionReload state:\n// - We have committed actionData in the store\n// - The current navigation was a mutation submission\n// - We're past the submitting state and into the loading state\n// - The location being loaded is not the result of a redirect\nvar isActionReload=state.actionData!=null&&state.navigation.formMethod!=null&&isMutationMethod(state.navigation.formMethod)&&state.navigation.state===\"loading\"&&((_location$state=location.state)==null?void 0:_location$state._isRedirect)!==true;var actionData;if(newState.actionData){if(Object.keys(newState.actionData).length>0){actionData=newState.actionData;}else{// Empty actionData -> clear prior actionData due to an action error\nactionData=null;}}else if(isActionReload){// Keep the current data if we're wrapping up the action reload\nactionData=state.actionData;}else{// Clear actionData on any other completed navigations\nactionData=null;}// Always preserve any existing loaderData from re-used routes\nvar loaderData=newState.loaderData?mergeLoaderData(state.loaderData,newState.loaderData,newState.matches||[],newState.errors):state.loaderData;// On a successful navigation we can assume we got through all blockers\n// so we can start fresh\nvar _iterator2=_createForOfIteratorHelper(blockerFunctions),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _step2$value=_slicedToArray(_step2.value,1),key=_step2$value[0];deleteBlocker(key);}// Always respect the user flag.  Otherwise don't reset on mutation\n// submission navigations unless they redirect\n}catch(err){_iterator2.e(err);}finally{_iterator2.f();}var preventScrollReset=pendingPreventScrollReset===true||state.navigation.formMethod!=null&&isMutationMethod(state.navigation.formMethod)&&((_location$state2=location.state)==null?void 0:_location$state2._isRedirect)!==true;if(inFlightDataRoutes){dataRoutes=inFlightDataRoutes;inFlightDataRoutes=undefined;}updateState(_extends({},newState,{actionData:actionData,loaderData:loaderData,historyAction:pendingAction,location:location,initialized:true,navigation:IDLE_NAVIGATION,revalidation:\"idle\",restoreScrollPosition:getSavedScrollPosition(location,newState.matches||state.matches),preventScrollReset:preventScrollReset,blockers:new Map(state.blockers)}));if(isUninterruptedRevalidation);else if(pendingAction===Action.Pop);else if(pendingAction===Action.Push){init.history.push(location,location.state);}else if(pendingAction===Action.Replace){init.history.replace(location,location.state);}// Reset stateful navigation vars\npendingAction=Action.Pop;pendingPreventScrollReset=false;isUninterruptedRevalidation=false;isRevalidationRequired=false;cancelledDeferredRoutes=[];cancelledFetcherLoads=[];}// Trigger a navigation event, which can either be a numerical POP or a PUSH\n// replace with an optional submission\nfunction navigate(_x2,_x3){return _navigate.apply(this,arguments);}// Revalidate all current loaders.  If a navigation is in progress or if this\n// is interrupted by a navigation, allow this to \"succeed\" by calling all\n// loaders during the next loader round\nfunction _navigate(){_navigate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(to,opts){var normalizedPath,_normalizeNavigateOpt2,path,submission,error,currentLocation,nextLocation,userReplace,historyAction,preventScrollReset,blockerKey;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!(typeof to===\"number\")){_context2.next=3;break;}init.history.go(to);return _context2.abrupt(\"return\");case 3:normalizedPath=normalizeTo(state.location,state.matches,basename,future.v7_prependBasename,to,opts==null?void 0:opts.fromRouteId,opts==null?void 0:opts.relative);_normalizeNavigateOpt2=normalizeNavigateOptions(future.v7_normalizeFormMethod,false,normalizedPath,opts),path=_normalizeNavigateOpt2.path,submission=_normalizeNavigateOpt2.submission,error=_normalizeNavigateOpt2.error;currentLocation=state.location;nextLocation=createLocation(state.location,path,opts&&opts.state);// When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n// URL from window.location, so we need to encode it here so the behavior\n// remains the same as POP and non-data-router usages.  new URL() does all\n// the same encoding we'd get from a history.pushState/window.location read\n// without having to touch history\nnextLocation=_extends({},nextLocation,init.history.encodeLocation(nextLocation));userReplace=opts&&opts.replace!=null?opts.replace:undefined;historyAction=Action.Push;if(userReplace===true){historyAction=Action.Replace;}else if(userReplace===false);else if(submission!=null&&isMutationMethod(submission.formMethod)&&submission.formAction===state.location.pathname+state.location.search){// By default on submissions to the current location we REPLACE so that\n// users don't have to double-click the back button to get to the prior\n// location.  If the user redirects to a different location from the\n// action/loader this will be ignored and the redirect will be a PUSH\nhistoryAction=Action.Replace;}preventScrollReset=opts&&\"preventScrollReset\"in opts?opts.preventScrollReset===true:undefined;blockerKey=shouldBlockNavigation({currentLocation:currentLocation,nextLocation:nextLocation,historyAction:historyAction});if(!blockerKey){_context2.next=16;break;}// Put the blocker into a blocked state\nupdateBlocker(blockerKey,{state:\"blocked\",location:nextLocation,proceed:function proceed(){updateBlocker(blockerKey,{state:\"proceeding\",proceed:undefined,reset:undefined,location:nextLocation});// Send the same navigation through\nnavigate(to,opts);},reset:function reset(){deleteBlocker(blockerKey);updateState({blockers:new Map(state.blockers)});}});return _context2.abrupt(\"return\");case 16:_context2.next=18;return startNavigation(historyAction,nextLocation,{submission:submission,// Send through the formData serialization error if we have one so we can\n// render at the right error boundary after we match routes\npendingError:error,preventScrollReset:preventScrollReset,replace:opts&&opts.replace});case 18:return _context2.abrupt(\"return\",_context2.sent);case 19:case\"end\":return _context2.stop();}},_callee2);}));return _navigate.apply(this,arguments);}function revalidate(){interruptActiveLoads();updateState({revalidation:\"loading\"});// If we're currently submitting an action, we don't need to start a new\n// navigation, we'll just let the follow up loader execution call all loaders\nif(state.navigation.state===\"submitting\"){return;}// If we're currently in an idle state, start a new navigation for the current\n// action/location and mark it as uninterrupted, which will skip the history\n// update in completeNavigation\nif(state.navigation.state===\"idle\"){startNavigation(state.historyAction,state.location,{startUninterruptedRevalidation:true});return;}// Otherwise, if we're currently in a loading state, just start a new\n// navigation to the navigation.location but do not trigger an uninterrupted\n// revalidation so that history correctly updates once the navigation completes\nstartNavigation(pendingAction||state.historyAction,state.navigation.location,{overrideNavigation:state.navigation});}// Start a navigation to the given action/location.  Can optionally provide a\n// overrideNavigation which will override the normalLoad in the case of a redirect\n// navigation\nfunction startNavigation(_x4,_x5,_x6){return _startNavigation.apply(this,arguments);}// Call the action matched by the leaf route for this navigation and handle\n// redirects/errors\nfunction _startNavigation(){_startNavigation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(historyAction,location,opts){var routesToUse,loadingNavigation,matches,_error,_getShortCircuitMatch2,notFoundMatches,_route,request,pendingActionData,pendingError,actionOutput,navigation,_yield$handleLoaders,shortCircuited,loaderData,errors;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:// Abort any in-progress navigations and start a new one. Unset any ongoing\n// uninterrupted revalidations unless told otherwise, since we want this\n// new navigation to update history normally\npendingNavigationController&&pendingNavigationController.abort();pendingNavigationController=null;pendingAction=historyAction;isUninterruptedRevalidation=(opts&&opts.startUninterruptedRevalidation)===true;// Save the current scroll position every time we start a new navigation,\n// and track whether we should reset scroll on completion\nsaveScrollPosition(state.location,state.matches);pendingPreventScrollReset=(opts&&opts.preventScrollReset)===true;routesToUse=inFlightDataRoutes||dataRoutes;loadingNavigation=opts&&opts.overrideNavigation;matches=matchRoutes(routesToUse,location,basename);// Short circuit with a 404 on the root error boundary if we match nothing\nif(matches){_context3.next=15;break;}_error=getInternalRouterError(404,{pathname:location.pathname});_getShortCircuitMatch2=getShortCircuitMatches(routesToUse),notFoundMatches=_getShortCircuitMatch2.matches,_route=_getShortCircuitMatch2.route;// Cancel all pending deferred on 404s since we don't keep any routes\ncancelActiveDeferreds();completeNavigation(location,{matches:notFoundMatches,loaderData:{},errors:_defineProperty({},_route.id,_error)});return _context3.abrupt(\"return\");case 15:if(!(isHashChangeOnly(state.location,location)&&!(opts&&opts.submission&&isMutationMethod(opts.submission.formMethod)))){_context3.next=18;break;}completeNavigation(location,{matches:matches});return _context3.abrupt(\"return\");case 18:// Create a controller/Request for this navigation\npendingNavigationController=new AbortController();request=createClientSideRequest(init.history,location,pendingNavigationController.signal,opts&&opts.submission);if(!(opts&&opts.pendingError)){_context3.next=24;break;}// If we have a pendingError, it means the user attempted a GET submission\n// with binary FormData so assign here and skip to handleLoaders.  That\n// way we handle calling loaders above the boundary etc.  It's not really\n// different from an actionError in that sense.\npendingError=_defineProperty({},findNearestBoundary(matches).route.id,opts.pendingError);_context3.next=35;break;case 24:if(!(opts&&opts.submission&&isMutationMethod(opts.submission.formMethod))){_context3.next=35;break;}_context3.next=27;return handleAction(request,location,opts.submission,matches,{replace:opts.replace});case 27:actionOutput=_context3.sent;if(!actionOutput.shortCircuited){_context3.next=30;break;}return _context3.abrupt(\"return\");case 30:pendingActionData=actionOutput.pendingActionData;pendingError=actionOutput.pendingActionError;navigation=_extends({state:\"loading\",location:location},opts.submission);loadingNavigation=navigation;// Create a GET request for the loaders\nrequest=new Request(request.url,{signal:request.signal});case 35:_context3.next=37;return handleLoaders(request,location,matches,loadingNavigation,opts&&opts.submission,opts&&opts.fetcherSubmission,opts&&opts.replace,pendingActionData,pendingError);case 37:_yield$handleLoaders=_context3.sent;shortCircuited=_yield$handleLoaders.shortCircuited;loaderData=_yield$handleLoaders.loaderData;errors=_yield$handleLoaders.errors;if(!shortCircuited){_context3.next=43;break;}return _context3.abrupt(\"return\");case 43:// Clean up now that the action/loaders have completed.  Don't clean up if\n// we short circuited because pendingNavigationController will have already\n// been assigned to a new controller for the next navigation\npendingNavigationController=null;completeNavigation(location,_extends({matches:matches},pendingActionData?{actionData:pendingActionData}:{},{loaderData:loaderData,errors:errors}));case 45:case\"end\":return _context3.stop();}},_callee3);}));return _startNavigation.apply(this,arguments);}function handleAction(_x7,_x8,_x9,_x10,_x11){return _handleAction.apply(this,arguments);}// Call all applicable loaders for the given matches, handling redirects,\n// errors, etc.\nfunction _handleAction(){_handleAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request,location,submission,matches,opts){var navigation,result,actionMatch,replace,boundaryMatch;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:interruptActiveLoads();// Put us in a submitting state\nnavigation=_extends({state:\"submitting\",location:location},submission);updateState({navigation:navigation});// Call our action and get the result\nactionMatch=getTargetMatch(matches,location);if(!(!actionMatch.route.action&&!actionMatch.route.lazy)){_context4.next=8;break;}result={type:ResultType.error,error:getInternalRouterError(405,{method:request.method,pathname:location.pathname,routeId:actionMatch.route.id})};_context4.next=13;break;case 8:_context4.next=10;return callLoaderOrAction(\"action\",request,actionMatch,matches,manifest,mapRouteProperties,basename);case 10:result=_context4.sent;if(!request.signal.aborted){_context4.next=13;break;}return _context4.abrupt(\"return\",{shortCircuited:true});case 13:if(!isRedirectResult(result)){_context4.next=18;break;}if(opts&&opts.replace!=null){replace=opts.replace;}else{// If the user didn't explicity indicate replace behavior, replace if\n// we redirected to the exact same location we're currently at to avoid\n// double back-buttons\nreplace=result.location===state.location.pathname+state.location.search;}_context4.next=17;return startRedirectNavigation(state,result,{submission:submission,replace:replace});case 17:return _context4.abrupt(\"return\",{shortCircuited:true});case 18:if(!isErrorResult(result)){_context4.next=22;break;}// Store off the pending error - we use it to determine which loaders\n// to call and will commit it when we complete the navigation\nboundaryMatch=findNearestBoundary(matches,actionMatch.route.id);// By default, all submissions are REPLACE navigations, but if the\n// action threw an error that'll be rendered in an errorElement, we fall\n// back to PUSH so that the user can use the back button to get back to\n// the pre-submission form location to try again\nif((opts&&opts.replace)!==true){pendingAction=Action.Push;}return _context4.abrupt(\"return\",{// Send back an empty object we can use to clear out any prior actionData\npendingActionData:{},pendingActionError:_defineProperty({},boundaryMatch.route.id,result.error)});case 22:if(!isDeferredResult(result)){_context4.next=24;break;}throw getInternalRouterError(400,{type:\"defer-action\"});case 24:return _context4.abrupt(\"return\",{pendingActionData:_defineProperty({},actionMatch.route.id,result.data)});case 25:case\"end\":return _context4.stop();}},_callee4);}));return _handleAction.apply(this,arguments);}function handleLoaders(_x12,_x13,_x14,_x15,_x16,_x17,_x18,_x19,_x20){return _handleLoaders.apply(this,arguments);}function _handleLoaders(){_handleLoaders=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request,location,matches,overrideNavigation,submission,fetcherSubmission,replace,pendingActionData,pendingError){var loadingNavigation,navigation,activeSubmission,routesToUse,_getMatchesToLoad,_getMatchesToLoad2,matchesToLoad,revalidatingFetchers,_updatedFetchers,actionData,abortPendingFetchRevalidations,_yield$callLoadersAnd,results,loaderResults,fetcherResults,redirect,_processLoaderData,loaderData,errors,updatedFetchers,didAbortFetchLoads,shouldUpdateFetchers;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:// Figure out the right navigation we want to use for data loading\nloadingNavigation=overrideNavigation;if(!loadingNavigation){navigation=_extends({state:\"loading\",location:location,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined},submission);loadingNavigation=navigation;}// If this was a redirect from an action we don't have a \"submission\" but\n// we have it on the loading navigation so use that if available\nactiveSubmission=submission||fetcherSubmission?submission||fetcherSubmission:loadingNavigation.formMethod&&loadingNavigation.formAction&&loadingNavigation.formData&&loadingNavigation.formEncType?{formMethod:loadingNavigation.formMethod,formAction:loadingNavigation.formAction,formData:loadingNavigation.formData,formEncType:loadingNavigation.formEncType}:undefined;routesToUse=inFlightDataRoutes||dataRoutes;_getMatchesToLoad=getMatchesToLoad(init.history,state,matches,activeSubmission,location,isRevalidationRequired,cancelledDeferredRoutes,cancelledFetcherLoads,fetchLoadMatches,routesToUse,basename,pendingActionData,pendingError),_getMatchesToLoad2=_slicedToArray(_getMatchesToLoad,2),matchesToLoad=_getMatchesToLoad2[0],revalidatingFetchers=_getMatchesToLoad2[1];// Cancel pending deferreds for no-longer-matched routes or routes we're\n// about to reload.  Note that if this is an action reload we would have\n// already cancelled all pending deferreds so this would be a no-op\ncancelActiveDeferreds(function(routeId){return!(matches&&matches.some(function(m){return m.route.id===routeId;}))||matchesToLoad&&matchesToLoad.some(function(m){return m.route.id===routeId;});});// Short circuit if we have no loaders to run\nif(!(matchesToLoad.length===0&&revalidatingFetchers.length===0)){_context5.next=10;break;}_updatedFetchers=markFetchRedirectsDone();completeNavigation(location,_extends({matches:matches,loaderData:{},// Commit pending error if we're short circuiting\nerrors:pendingError||null},pendingActionData?{actionData:pendingActionData}:{},_updatedFetchers?{fetchers:new Map(state.fetchers)}:{}));return _context5.abrupt(\"return\",{shortCircuited:true});case 10:// If this is an uninterrupted revalidation, we remain in our current idle\n// state.  If not, we need to switch to our loading state and load data,\n// preserving any new action data or existing action data (in the case of\n// a revalidation interrupting an actionReload)\nif(!isUninterruptedRevalidation){revalidatingFetchers.forEach(function(rf){var fetcher=state.fetchers.get(rf.key);var revalidatingFetcher={state:\"loading\",data:fetcher&&fetcher.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,\" _hasFetcherDoneAnything \":true};state.fetchers.set(rf.key,revalidatingFetcher);});actionData=pendingActionData||state.actionData;updateState(_extends({navigation:loadingNavigation},actionData?Object.keys(actionData).length===0?{actionData:null}:{actionData:actionData}:{},revalidatingFetchers.length>0?{fetchers:new Map(state.fetchers)}:{}));}pendingNavigationLoadId=++incrementingLoadId;revalidatingFetchers.forEach(function(rf){if(rf.controller){// Fetchers use an independent AbortController so that aborting a fetcher\n// (via deleteFetcher) does not abort the triggering navigation that\n// triggered the revalidation\nfetchControllers.set(rf.key,rf.controller);}});// Proxy navigation abort through to revalidation fetchers\nabortPendingFetchRevalidations=function abortPendingFetchRevalidations(){return revalidatingFetchers.forEach(function(f){return abortFetcher(f.key);});};if(pendingNavigationController){pendingNavigationController.signal.addEventListener(\"abort\",abortPendingFetchRevalidations);}_context5.next=17;return callLoadersAndMaybeResolveData(state.matches,matches,matchesToLoad,revalidatingFetchers,request);case 17:_yield$callLoadersAnd=_context5.sent;results=_yield$callLoadersAnd.results;loaderResults=_yield$callLoadersAnd.loaderResults;fetcherResults=_yield$callLoadersAnd.fetcherResults;if(!request.signal.aborted){_context5.next=23;break;}return _context5.abrupt(\"return\",{shortCircuited:true});case 23:// Clean up _after_ loaders have completed.  Don't clean up if we short\n// circuited because fetchControllers would have been aborted and\n// reassigned to new controllers for the next navigation\nif(pendingNavigationController){pendingNavigationController.signal.removeEventListener(\"abort\",abortPendingFetchRevalidations);}revalidatingFetchers.forEach(function(rf){return fetchControllers.delete(rf.key);});// If any loaders returned a redirect Response, start a new REPLACE navigation\nredirect=findRedirect(results);if(!redirect){_context5.next=30;break;}_context5.next=29;return startRedirectNavigation(state,redirect,{replace:replace});case 29:return _context5.abrupt(\"return\",{shortCircuited:true});case 30:// Process and commit output from loaders\n_processLoaderData=processLoaderData(state,matches,matchesToLoad,loaderResults,pendingError,revalidatingFetchers,fetcherResults,activeDeferreds),loaderData=_processLoaderData.loaderData,errors=_processLoaderData.errors;// Wire up subscribers to update loaderData as promises settle\nactiveDeferreds.forEach(function(deferredData,routeId){deferredData.subscribe(function(aborted){// Note: No need to updateState here since the TrackedPromise on\n// loaderData is stable across resolve/reject\n// Remove this instance if we were aborted or if promises have settled\nif(aborted||deferredData.done){activeDeferreds.delete(routeId);}});});updatedFetchers=markFetchRedirectsDone();didAbortFetchLoads=abortStaleFetchLoads(pendingNavigationLoadId);shouldUpdateFetchers=updatedFetchers||didAbortFetchLoads||revalidatingFetchers.length>0;return _context5.abrupt(\"return\",_extends({loaderData:loaderData,errors:errors},shouldUpdateFetchers?{fetchers:new Map(state.fetchers)}:{}));case 36:case\"end\":return _context5.stop();}},_callee5);}));return _handleLoaders.apply(this,arguments);}function getFetcher(key){return state.fetchers.get(key)||IDLE_FETCHER;}// Trigger a fetcher load/submit for the given fetcher key\nfunction fetch(key,routeId,href,opts){if(isServer){throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \"+\"You are likely calling a useFetcher() method in the body of your component. \"+\"Try moving it to a useEffect or a callback.\");}if(fetchControllers.has(key))abortFetcher(key);var routesToUse=inFlightDataRoutes||dataRoutes;var normalizedPath=normalizeTo(state.location,state.matches,basename,future.v7_prependBasename,href,routeId,opts==null?void 0:opts.relative);var matches=matchRoutes(routesToUse,normalizedPath,basename);if(!matches){setFetcherError(key,routeId,getInternalRouterError(404,{pathname:normalizedPath}));return;}var _normalizeNavigateOpt=normalizeNavigateOptions(future.v7_normalizeFormMethod,true,normalizedPath,opts),path=_normalizeNavigateOpt.path,submission=_normalizeNavigateOpt.submission;var match=getTargetMatch(matches,path);pendingPreventScrollReset=(opts&&opts.preventScrollReset)===true;if(submission&&isMutationMethod(submission.formMethod)){handleFetcherAction(key,routeId,path,match,matches,submission);return;}// Store off the match so we can call it's shouldRevalidate on subsequent\n// revalidations\nfetchLoadMatches.set(key,{routeId:routeId,path:path});handleFetcherLoader(key,routeId,path,match,matches,submission);}// Call the action for the matched fetcher.submit(), and then handle redirects,\n// errors, and revalidation\nfunction handleFetcherAction(_x21,_x22,_x23,_x24,_x25,_x26){return _handleFetcherAction.apply(this,arguments);}// Call the matched loader for fetcher.load(), handling redirects, errors, etc.\nfunction _handleFetcherAction(){_handleFetcherAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(key,routeId,path,match,requestMatches,submission){var _error2,existingFetcher,fetcher,abortController,fetchRequest,actionResult,loadingFetcher,nextLocation,revalidationRequest,routesToUse,matches,loadId,loadFetcher,_getMatchesToLoad3,_getMatchesToLoad4,matchesToLoad,revalidatingFetchers,abortPendingFetchRevalidations,_yield$callLoadersAnd2,results,loaderResults,fetcherResults,redirect,_processLoaderData2,loaderData,errors,doneFetcher,didAbortFetchLoads;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:interruptActiveLoads();fetchLoadMatches.delete(key);if(!(!match.route.action&&!match.route.lazy)){_context6.next=6;break;}_error2=getInternalRouterError(405,{method:submission.formMethod,pathname:path,routeId:routeId});setFetcherError(key,routeId,_error2);return _context6.abrupt(\"return\");case 6:// Put this fetcher into it's submitting state\nexistingFetcher=state.fetchers.get(key);fetcher=_extends({state:\"submitting\"},submission,{data:existingFetcher&&existingFetcher.data,\" _hasFetcherDoneAnything \":true});state.fetchers.set(key,fetcher);updateState({fetchers:new Map(state.fetchers)});// Call the action for the fetcher\nabortController=new AbortController();fetchRequest=createClientSideRequest(init.history,path,abortController.signal,submission);fetchControllers.set(key,abortController);_context6.next=15;return callLoaderOrAction(\"action\",fetchRequest,match,requestMatches,manifest,mapRouteProperties,basename);case 15:actionResult=_context6.sent;if(!fetchRequest.signal.aborted){_context6.next=19;break;}// We can delete this so long as we weren't aborted by ou our own fetcher\n// re-submit which would have put _new_ controller is in fetchControllers\nif(fetchControllers.get(key)===abortController){fetchControllers.delete(key);}return _context6.abrupt(\"return\");case 19:if(!isRedirectResult(actionResult)){_context6.next=26;break;}fetchControllers.delete(key);fetchRedirectIds.add(key);loadingFetcher=_extends({state:\"loading\"},submission,{data:undefined,\" _hasFetcherDoneAnything \":true});state.fetchers.set(key,loadingFetcher);updateState({fetchers:new Map(state.fetchers)});return _context6.abrupt(\"return\",startRedirectNavigation(state,actionResult,{submission:submission,isFetchActionRedirect:true}));case 26:if(!isErrorResult(actionResult)){_context6.next=29;break;}setFetcherError(key,routeId,actionResult.error);return _context6.abrupt(\"return\");case 29:if(!isDeferredResult(actionResult)){_context6.next=31;break;}throw getInternalRouterError(400,{type:\"defer-action\"});case 31:// Start the data load for current matches, or the next location if we're\n// in the middle of a navigation\nnextLocation=state.navigation.location||state.location;revalidationRequest=createClientSideRequest(init.history,nextLocation,abortController.signal);routesToUse=inFlightDataRoutes||dataRoutes;matches=state.navigation.state!==\"idle\"?matchRoutes(routesToUse,state.navigation.location,basename):state.matches;invariant(matches,\"Didn't find any matches after fetcher action\");loadId=++incrementingLoadId;fetchReloadIds.set(key,loadId);loadFetcher=_extends({state:\"loading\",data:actionResult.data},submission,{\" _hasFetcherDoneAnything \":true});state.fetchers.set(key,loadFetcher);_getMatchesToLoad3=getMatchesToLoad(init.history,state,matches,submission,nextLocation,isRevalidationRequired,cancelledDeferredRoutes,cancelledFetcherLoads,fetchLoadMatches,routesToUse,basename,_defineProperty({},match.route.id,actionResult.data),undefined// No need to send through errors since we short circuit above\n),_getMatchesToLoad4=_slicedToArray(_getMatchesToLoad3,2),matchesToLoad=_getMatchesToLoad4[0],revalidatingFetchers=_getMatchesToLoad4[1];// Put all revalidating fetchers into the loading state, except for the\n// current fetcher which we want to keep in it's current loading state which\n// contains it's action submission info + action data\nrevalidatingFetchers.filter(function(rf){return rf.key!==key;}).forEach(function(rf){var staleKey=rf.key;var existingFetcher=state.fetchers.get(staleKey);var revalidatingFetcher={state:\"loading\",data:existingFetcher&&existingFetcher.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,\" _hasFetcherDoneAnything \":true};state.fetchers.set(staleKey,revalidatingFetcher);if(rf.controller){fetchControllers.set(staleKey,rf.controller);}});updateState({fetchers:new Map(state.fetchers)});abortPendingFetchRevalidations=function abortPendingFetchRevalidations(){return revalidatingFetchers.forEach(function(rf){return abortFetcher(rf.key);});};abortController.signal.addEventListener(\"abort\",abortPendingFetchRevalidations);_context6.next=47;return callLoadersAndMaybeResolveData(state.matches,matches,matchesToLoad,revalidatingFetchers,revalidationRequest);case 47:_yield$callLoadersAnd2=_context6.sent;results=_yield$callLoadersAnd2.results;loaderResults=_yield$callLoadersAnd2.loaderResults;fetcherResults=_yield$callLoadersAnd2.fetcherResults;if(!abortController.signal.aborted){_context6.next=53;break;}return _context6.abrupt(\"return\");case 53:abortController.signal.removeEventListener(\"abort\",abortPendingFetchRevalidations);fetchReloadIds.delete(key);fetchControllers.delete(key);revalidatingFetchers.forEach(function(r){return fetchControllers.delete(r.key);});redirect=findRedirect(results);if(!redirect){_context6.next=60;break;}return _context6.abrupt(\"return\",startRedirectNavigation(state,redirect));case 60:// Process and commit output from loaders\n_processLoaderData2=processLoaderData(state,state.matches,matchesToLoad,loaderResults,undefined,revalidatingFetchers,fetcherResults,activeDeferreds),loaderData=_processLoaderData2.loaderData,errors=_processLoaderData2.errors;doneFetcher={state:\"idle\",data:actionResult.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,\" _hasFetcherDoneAnything \":true};state.fetchers.set(key,doneFetcher);didAbortFetchLoads=abortStaleFetchLoads(loadId);// If we are currently in a navigation loading state and this fetcher is\n// more recent than the navigation, we want the newer data so abort the\n// navigation and complete it with the fetcher data\nif(state.navigation.state===\"loading\"&&loadId>pendingNavigationLoadId){invariant(pendingAction,\"Expected pending action\");pendingNavigationController&&pendingNavigationController.abort();completeNavigation(state.navigation.location,{matches:matches,loaderData:loaderData,errors:errors,fetchers:new Map(state.fetchers)});}else{// otherwise just update with the fetcher data, preserving any existing\n// loaderData for loaders that did not need to reload.  We have to\n// manually merge here since we aren't going through completeNavigation\nupdateState(_extends({errors:errors,loaderData:mergeLoaderData(state.loaderData,loaderData,matches,errors)},didAbortFetchLoads?{fetchers:new Map(state.fetchers)}:{}));isRevalidationRequired=false;}case 65:case\"end\":return _context6.stop();}},_callee6);}));return _handleFetcherAction.apply(this,arguments);}function handleFetcherLoader(_x27,_x28,_x29,_x30,_x31,_x32){return _handleFetcherLoader.apply(this,arguments);}/**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */function _handleFetcherLoader(){_handleFetcherLoader=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(key,routeId,path,match,matches,submission){var existingFetcher,loadingFetcher,abortController,fetchRequest,result,boundaryMatch,doneFetcher;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:existingFetcher=state.fetchers.get(key);// Put this fetcher into it's loading state\nloadingFetcher=_extends({state:\"loading\",formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined},submission,{data:existingFetcher&&existingFetcher.data,\" _hasFetcherDoneAnything \":true});state.fetchers.set(key,loadingFetcher);updateState({fetchers:new Map(state.fetchers)});// Call the loader for this fetcher route match\nabortController=new AbortController();fetchRequest=createClientSideRequest(init.history,path,abortController.signal);fetchControllers.set(key,abortController);_context7.next=9;return callLoaderOrAction(\"loader\",fetchRequest,match,matches,manifest,mapRouteProperties,basename);case 9:result=_context7.sent;if(!isDeferredResult(result)){_context7.next=17;break;}_context7.next=13;return resolveDeferredData(result,fetchRequest.signal,true);case 13:_context7.t0=_context7.sent;if(_context7.t0){_context7.next=16;break;}_context7.t0=result;case 16:result=_context7.t0;case 17:// We can delete this so long as we weren't aborted by our our own fetcher\n// re-load which would have put _new_ controller is in fetchControllers\nif(fetchControllers.get(key)===abortController){fetchControllers.delete(key);}if(!fetchRequest.signal.aborted){_context7.next=20;break;}return _context7.abrupt(\"return\");case 20:if(!isRedirectResult(result)){_context7.next=25;break;}fetchRedirectIds.add(key);_context7.next=24;return startRedirectNavigation(state,result);case 24:return _context7.abrupt(\"return\");case 25:if(!isErrorResult(result)){_context7.next=30;break;}boundaryMatch=findNearestBoundary(state.matches,routeId);state.fetchers.delete(key);// TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n// do we need to behave any differently with our non-redirect errors?\n// What if it was a non-redirect Response?\nupdateState({fetchers:new Map(state.fetchers),errors:_defineProperty({},boundaryMatch.route.id,result.error)});return _context7.abrupt(\"return\");case 30:invariant(!isDeferredResult(result),\"Unhandled fetcher deferred data\");// Put the fetcher back into an idle state\ndoneFetcher={state:\"idle\",data:result.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,\" _hasFetcherDoneAnything \":true};state.fetchers.set(key,doneFetcher);updateState({fetchers:new Map(state.fetchers)});case 34:case\"end\":return _context7.stop();}},_callee7);}));return _handleFetcherLoader.apply(this,arguments);}function startRedirectNavigation(_x33,_x34,_x35){return _startRedirectNavigation.apply(this,arguments);}function _startRedirectNavigation(){_startRedirectNavigation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(state,redirect,_temp){var _window,_ref6,submission,replace,isFetchActionRedirect,redirectLocation,url,isDifferentBasename,redirectHistoryAction,_state$navigation,formMethod,formAction,formEncType,formData;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1)switch(_context8.prev=_context8.next){case 0:_ref6=_temp===void 0?{}:_temp,submission=_ref6.submission,replace=_ref6.replace,isFetchActionRedirect=_ref6.isFetchActionRedirect;if(redirect.revalidate){isRevalidationRequired=true;}redirectLocation=createLocation(state.location,redirect.location,// TODO: This can be removed once we get rid of useTransition in Remix v2\n_extends({_isRedirect:true},isFetchActionRedirect?{_isFetchActionRedirect:true}:{}));invariant(redirectLocation,\"Expected a location on the redirect navigation\");// Check if this an absolute external redirect that goes to a new origin\nif(!(ABSOLUTE_URL_REGEX.test(redirect.location)&&isBrowser&&typeof((_window=window)==null?void 0:_window.location)!==\"undefined\")){_context8.next=10;break;}url=init.history.createURL(redirect.location);isDifferentBasename=stripBasename(url.pathname,basename)==null;if(!(window.location.origin!==url.origin||isDifferentBasename)){_context8.next=10;break;}if(replace){window.location.replace(redirect.location);}else{window.location.assign(redirect.location);}return _context8.abrupt(\"return\");case 10:// There's no need to abort on redirects, since we don't detect the\n// redirect until the action/loaders have settled\npendingNavigationController=null;redirectHistoryAction=replace===true?Action.Replace:Action.Push;// Use the incoming submission if provided, fallback on the active one in\n// state.navigation\n_state$navigation=state.navigation,formMethod=_state$navigation.formMethod,formAction=_state$navigation.formAction,formEncType=_state$navigation.formEncType,formData=_state$navigation.formData;if(!submission&&formMethod&&formAction&&formData&&formEncType){submission={formMethod:formMethod,formAction:formAction,formEncType:formEncType,formData:formData};}// If this was a 307/308 submission we want to preserve the HTTP method and\n// re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n// redirected location\nif(!(redirectPreserveMethodStatusCodes.has(redirect.status)&&submission&&isMutationMethod(submission.formMethod))){_context8.next=19;break;}_context8.next=17;return startNavigation(redirectHistoryAction,redirectLocation,{submission:_extends({},submission,{formAction:redirect.location}),// Preserve this flag across redirects\npreventScrollReset:pendingPreventScrollReset});case 17:_context8.next=26;break;case 19:if(!isFetchActionRedirect){_context8.next=24;break;}_context8.next=22;return startNavigation(redirectHistoryAction,redirectLocation,{overrideNavigation:{state:\"loading\",location:redirectLocation,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined},fetcherSubmission:submission,// Preserve this flag across redirects\npreventScrollReset:pendingPreventScrollReset});case 22:_context8.next=26;break;case 24:_context8.next=26;return startNavigation(redirectHistoryAction,redirectLocation,{overrideNavigation:{state:\"loading\",location:redirectLocation,formMethod:submission?submission.formMethod:undefined,formAction:submission?submission.formAction:undefined,formEncType:submission?submission.formEncType:undefined,formData:submission?submission.formData:undefined},// Preserve this flag across redirects\npreventScrollReset:pendingPreventScrollReset});case 26:case\"end\":return _context8.stop();}},_callee8);}));return _startRedirectNavigation.apply(this,arguments);}function callLoadersAndMaybeResolveData(_x36,_x37,_x38,_x39,_x40){return _callLoadersAndMaybeResolveData.apply(this,arguments);}function _callLoadersAndMaybeResolveData(){_callLoadersAndMaybeResolveData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(currentMatches,matches,matchesToLoad,fetchersToLoad,request){var results,loaderResults,fetcherResults;return _regeneratorRuntime().wrap(function _callee9$(_context9){while(1)switch(_context9.prev=_context9.next){case 0:_context9.next=2;return Promise.all([].concat(_toConsumableArray(matchesToLoad.map(function(match){return callLoaderOrAction(\"loader\",request,match,matches,manifest,mapRouteProperties,basename);})),_toConsumableArray(fetchersToLoad.map(function(f){if(f.matches&&f.match&&f.controller){return callLoaderOrAction(\"loader\",createClientSideRequest(init.history,f.path,f.controller.signal),f.match,f.matches,manifest,mapRouteProperties,basename);}else{var _error3={type:ResultType.error,error:getInternalRouterError(404,{pathname:f.path})};return _error3;}}))));case 2:results=_context9.sent;loaderResults=results.slice(0,matchesToLoad.length);fetcherResults=results.slice(matchesToLoad.length);_context9.next=7;return Promise.all([resolveDeferredResults(currentMatches,matchesToLoad,loaderResults,loaderResults.map(function(){return request.signal;}),false,state.loaderData),resolveDeferredResults(currentMatches,fetchersToLoad.map(function(f){return f.match;}),fetcherResults,fetchersToLoad.map(function(f){return f.controller?f.controller.signal:null;}),true)]);case 7:return _context9.abrupt(\"return\",{results:results,loaderResults:loaderResults,fetcherResults:fetcherResults});case 8:case\"end\":return _context9.stop();}},_callee9);}));return _callLoadersAndMaybeResolveData.apply(this,arguments);}function interruptActiveLoads(){var _cancelledDeferredRou;// Every interruption triggers a revalidation\nisRevalidationRequired=true;// Cancel pending route-level deferreds and mark cancelled routes for\n// revalidation\n(_cancelledDeferredRou=cancelledDeferredRoutes).push.apply(_cancelledDeferredRou,_toConsumableArray(cancelActiveDeferreds()));// Abort in-flight fetcher loads\nfetchLoadMatches.forEach(function(_,key){if(fetchControllers.has(key)){cancelledFetcherLoads.push(key);abortFetcher(key);}});}function setFetcherError(key,routeId,error){var boundaryMatch=findNearestBoundary(state.matches,routeId);deleteFetcher(key);updateState({errors:_defineProperty({},boundaryMatch.route.id,error),fetchers:new Map(state.fetchers)});}function deleteFetcher(key){if(fetchControllers.has(key))abortFetcher(key);fetchLoadMatches.delete(key);fetchReloadIds.delete(key);fetchRedirectIds.delete(key);state.fetchers.delete(key);}function abortFetcher(key){var controller=fetchControllers.get(key);invariant(controller,\"Expected fetch controller: \"+key);controller.abort();fetchControllers.delete(key);}function markFetchersDone(keys){var _iterator3=_createForOfIteratorHelper(keys),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var key=_step3.value;var fetcher=getFetcher(key);var doneFetcher={state:\"idle\",data:fetcher.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,\" _hasFetcherDoneAnything \":true};state.fetchers.set(key,doneFetcher);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}function markFetchRedirectsDone(){var doneKeys=[];var updatedFetchers=false;var _iterator4=_createForOfIteratorHelper(fetchRedirectIds),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var key=_step4.value;var fetcher=state.fetchers.get(key);invariant(fetcher,\"Expected fetcher: \"+key);if(fetcher.state===\"loading\"){fetchRedirectIds.delete(key);doneKeys.push(key);updatedFetchers=true;}}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}markFetchersDone(doneKeys);return updatedFetchers;}function abortStaleFetchLoads(landedId){var yeetedKeys=[];var _iterator5=_createForOfIteratorHelper(fetchReloadIds),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var _step5$value=_slicedToArray(_step5.value,2),key=_step5$value[0],id=_step5$value[1];if(id<landedId){var fetcher=state.fetchers.get(key);invariant(fetcher,\"Expected fetcher: \"+key);if(fetcher.state===\"loading\"){abortFetcher(key);fetchReloadIds.delete(key);yeetedKeys.push(key);}}}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}markFetchersDone(yeetedKeys);return yeetedKeys.length>0;}function getBlocker(key,fn){var blocker=state.blockers.get(key)||IDLE_BLOCKER;if(blockerFunctions.get(key)!==fn){blockerFunctions.set(key,fn);}return blocker;}function deleteBlocker(key){state.blockers.delete(key);blockerFunctions.delete(key);}// Utility function to update blockers, ensuring valid state transitions\nfunction updateBlocker(key,newBlocker){var blocker=state.blockers.get(key)||IDLE_BLOCKER;// Poor mans state machine :)\n// https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\ninvariant(blocker.state===\"unblocked\"&&newBlocker.state===\"blocked\"||blocker.state===\"blocked\"&&newBlocker.state===\"blocked\"||blocker.state===\"blocked\"&&newBlocker.state===\"proceeding\"||blocker.state===\"blocked\"&&newBlocker.state===\"unblocked\"||blocker.state===\"proceeding\"&&newBlocker.state===\"unblocked\",\"Invalid blocker state transition: \"+blocker.state+\" -> \"+newBlocker.state);state.blockers.set(key,newBlocker);updateState({blockers:new Map(state.blockers)});}function shouldBlockNavigation(_ref2){var currentLocation=_ref2.currentLocation,nextLocation=_ref2.nextLocation,historyAction=_ref2.historyAction;if(blockerFunctions.size===0){return;}// We ony support a single active blocker at the moment since we don't have\n// any compelling use cases for multi-blocker yet\nif(blockerFunctions.size>1){warning(false,\"A router only supports one blocker at a time\");}var entries=Array.from(blockerFunctions.entries());var _entries=_slicedToArray(entries[entries.length-1],2),blockerKey=_entries[0],blockerFunction=_entries[1];var blocker=state.blockers.get(blockerKey);if(blocker&&blocker.state===\"proceeding\"){// If the blocker is currently proceeding, we don't need to re-check\n// it and can let this navigation continue\nreturn;}// At this point, we know we're unblocked/blocked so we need to check the\n// user-provided blocker function\nif(blockerFunction({currentLocation:currentLocation,nextLocation:nextLocation,historyAction:historyAction})){return blockerKey;}}function cancelActiveDeferreds(predicate){var cancelledRouteIds=[];activeDeferreds.forEach(function(dfd,routeId){if(!predicate||predicate(routeId)){// Cancel the deferred - but do not remove from activeDeferreds here -\n// we rely on the subscribers to do that so our tests can assert proper\n// cleanup via _internalActiveDeferreds\ndfd.cancel();cancelledRouteIds.push(routeId);activeDeferreds.delete(routeId);}});return cancelledRouteIds;}// Opt in to capturing and reporting scroll positions during navigations,\n// used by the <ScrollRestoration> component\nfunction enableScrollRestoration(positions,getPosition,getKey){savedScrollPositions=positions;getScrollPosition=getPosition;getScrollRestorationKey=getKey||function(location){return location.key;};// Perform initial hydration scroll restoration, since we miss the boat on\n// the initial updateState() because we've not yet rendered <ScrollRestoration/>\n// and therefore have no savedScrollPositions available\nif(!initialScrollRestored&&state.navigation===IDLE_NAVIGATION){initialScrollRestored=true;var y=getSavedScrollPosition(state.location,state.matches);if(y!=null){updateState({restoreScrollPosition:y});}}return function(){savedScrollPositions=null;getScrollPosition=null;getScrollRestorationKey=null;};}function saveScrollPosition(location,matches){if(savedScrollPositions&&getScrollRestorationKey&&getScrollPosition){var userMatches=matches.map(function(m){return createUseMatchesMatch(m,state.loaderData);});var key=getScrollRestorationKey(location,userMatches)||location.key;savedScrollPositions[key]=getScrollPosition();}}function getSavedScrollPosition(location,matches){if(savedScrollPositions&&getScrollRestorationKey&&getScrollPosition){var userMatches=matches.map(function(m){return createUseMatchesMatch(m,state.loaderData);});var key=getScrollRestorationKey(location,userMatches)||location.key;var y=savedScrollPositions[key];if(typeof y===\"number\"){return y;}}return null;}function _internalSetRoutes(newRoutes){inFlightDataRoutes=newRoutes;}router={get basename(){return basename;},get state(){return state;},get routes(){return dataRoutes;},initialize:initialize,subscribe:subscribe,enableScrollRestoration:enableScrollRestoration,navigate:navigate,fetch:fetch,revalidate:revalidate,// Passthrough to history-aware createHref used by useHref so we get proper\n// hash-aware URLs in DOM paths\ncreateHref:function createHref(to){return init.history.createHref(to);},encodeLocation:function encodeLocation(to){return init.history.encodeLocation(to);},getFetcher:getFetcher,deleteFetcher:deleteFetcher,dispose:dispose,getBlocker:getBlocker,deleteBlocker:deleteBlocker,_internalFetchControllers:fetchControllers,_internalActiveDeferreds:activeDeferreds,// TODO: Remove setRoutes, it's temporary to avoid dealing with\n// updating the tree while validating the update algorithm.\n_internalSetRoutes:_internalSetRoutes};return router;}//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nvar UNSAFE_DEFERRED_SYMBOL=Symbol(\"deferred\");function createStaticHandler(routes,opts){invariant(routes.length>0,\"You must provide a non-empty routes array to createStaticHandler\");var manifest={};var basename=(opts?opts.basename:null)||\"/\";var mapRouteProperties;if(opts!=null&&opts.mapRouteProperties){mapRouteProperties=opts.mapRouteProperties;}else if(opts!=null&&opts.detectErrorBoundary){// If they are still using the deprecated version, wrap it with the new API\nvar detectErrorBoundary=opts.detectErrorBoundary;mapRouteProperties=function mapRouteProperties(route){return{hasErrorBoundary:detectErrorBoundary(route)};};}else{mapRouteProperties=defaultMapRouteProperties;}var dataRoutes=convertRoutesToDataRoutes(routes,mapRouteProperties,undefined,manifest);/**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */function query(_x41,_x42){return _query.apply(this,arguments);}/**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */function _query(){_query=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(request,_temp2){var _ref7,requestContext,url,method,location,matches,error,_getShortCircuitMatch3,methodNotAllowedMatches,route,_error4,_getShortCircuitMatch4,notFoundMatches,_route2,result;return _regeneratorRuntime().wrap(function _callee10$(_context10){while(1)switch(_context10.prev=_context10.next){case 0:_ref7=_temp2===void 0?{}:_temp2,requestContext=_ref7.requestContext;url=new URL(request.url);method=request.method;location=createLocation(\"\",createPath(url),null,\"default\");matches=matchRoutes(dataRoutes,location,basename);// SSR supports HEAD requests while SPA doesn't\nif(!(!isValidMethod(method)&&method!==\"HEAD\")){_context10.next=11;break;}error=getInternalRouterError(405,{method:method});_getShortCircuitMatch3=getShortCircuitMatches(dataRoutes),methodNotAllowedMatches=_getShortCircuitMatch3.matches,route=_getShortCircuitMatch3.route;return _context10.abrupt(\"return\",{basename:basename,location:location,matches:methodNotAllowedMatches,loaderData:{},actionData:null,errors:_defineProperty({},route.id,error),statusCode:error.status,loaderHeaders:{},actionHeaders:{},activeDeferreds:null});case 11:if(matches){_context10.next=15;break;}_error4=getInternalRouterError(404,{pathname:location.pathname});_getShortCircuitMatch4=getShortCircuitMatches(dataRoutes),notFoundMatches=_getShortCircuitMatch4.matches,_route2=_getShortCircuitMatch4.route;return _context10.abrupt(\"return\",{basename:basename,location:location,matches:notFoundMatches,loaderData:{},actionData:null,errors:_defineProperty({},_route2.id,_error4),statusCode:_error4.status,loaderHeaders:{},actionHeaders:{},activeDeferreds:null});case 15:_context10.next=17;return queryImpl(request,location,matches,requestContext);case 17:result=_context10.sent;if(!isResponse(result)){_context10.next=20;break;}return _context10.abrupt(\"return\",result);case 20:return _context10.abrupt(\"return\",_extends({location:location,basename:basename},result));case 21:case\"end\":return _context10.stop();}},_callee10);}));return _query.apply(this,arguments);}function queryRoute(_x43,_x44){return _queryRoute.apply(this,arguments);}function _queryRoute(){_queryRoute=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(request,_temp3){var _ref8,routeId,requestContext,url,method,location,matches,match,result,error,_result$activeDeferre,data;return _regeneratorRuntime().wrap(function _callee11$(_context11){while(1)switch(_context11.prev=_context11.next){case 0:_ref8=_temp3===void 0?{}:_temp3,routeId=_ref8.routeId,requestContext=_ref8.requestContext;url=new URL(request.url);method=request.method;location=createLocation(\"\",createPath(url),null,\"default\");matches=matchRoutes(dataRoutes,location,basename);// SSR supports HEAD requests while SPA doesn't\nif(!(!isValidMethod(method)&&method!==\"HEAD\"&&method!==\"OPTIONS\")){_context11.next=9;break;}throw getInternalRouterError(405,{method:method});case 9:if(matches){_context11.next=11;break;}throw getInternalRouterError(404,{pathname:location.pathname});case 11:match=routeId?matches.find(function(m){return m.route.id===routeId;}):getTargetMatch(matches,location);if(!(routeId&&!match)){_context11.next=16;break;}throw getInternalRouterError(403,{pathname:location.pathname,routeId:routeId});case 16:if(match){_context11.next=18;break;}throw getInternalRouterError(404,{pathname:location.pathname});case 18:_context11.next=20;return queryImpl(request,location,matches,requestContext,match);case 20:result=_context11.sent;if(!isResponse(result)){_context11.next=23;break;}return _context11.abrupt(\"return\",result);case 23:error=result.errors?Object.values(result.errors)[0]:undefined;if(!(error!==undefined)){_context11.next=26;break;}throw error;case 26:if(!result.actionData){_context11.next=28;break;}return _context11.abrupt(\"return\",Object.values(result.actionData)[0]);case 28:if(!result.loaderData){_context11.next=32;break;}data=Object.values(result.loaderData)[0];if((_result$activeDeferre=result.activeDeferreds)!=null&&_result$activeDeferre[match.route.id]){data[UNSAFE_DEFERRED_SYMBOL]=result.activeDeferreds[match.route.id];}return _context11.abrupt(\"return\",data);case 32:return _context11.abrupt(\"return\",undefined);case 33:case\"end\":return _context11.stop();}},_callee11);}));return _queryRoute.apply(this,arguments);}function queryImpl(_x45,_x46,_x47,_x48,_x49){return _queryImpl.apply(this,arguments);}function _queryImpl(){_queryImpl=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(request,location,matches,requestContext,routeMatch){var _result,result;return _regeneratorRuntime().wrap(function _callee12$(_context12){while(1)switch(_context12.prev=_context12.next){case 0:invariant(request.signal,\"query()/queryRoute() requests must contain an AbortController signal\");_context12.prev=1;if(!isMutationMethod(request.method.toLowerCase())){_context12.next=7;break;}_context12.next=5;return submit(request,matches,routeMatch||getTargetMatch(matches,location),requestContext,routeMatch!=null);case 5:_result=_context12.sent;return _context12.abrupt(\"return\",_result);case 7:_context12.next=9;return loadRouteData(request,matches,requestContext,routeMatch);case 9:result=_context12.sent;return _context12.abrupt(\"return\",isResponse(result)?result:_extends({},result,{actionData:null,actionHeaders:{}}));case 13:_context12.prev=13;_context12.t0=_context12[\"catch\"](1);if(!isQueryRouteResponse(_context12.t0)){_context12.next=19;break;}if(!(_context12.t0.type===ResultType.error&&!isRedirectResponse(_context12.t0.response))){_context12.next=18;break;}throw _context12.t0.response;case 18:return _context12.abrupt(\"return\",_context12.t0.response);case 19:if(!isRedirectResponse(_context12.t0)){_context12.next=21;break;}return _context12.abrupt(\"return\",_context12.t0);case 21:throw _context12.t0;case 22:case\"end\":return _context12.stop();}},_callee12,null,[[1,13]]);}));return _queryImpl.apply(this,arguments);}function submit(_x50,_x51,_x52,_x53,_x54){return _submit.apply(this,arguments);}function _submit(){_submit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(request,matches,actionMatch,requestContext,isRouteRequest){var result,error,method,_error5,boundaryMatch,_context13,loaderRequest,context;return _regeneratorRuntime().wrap(function _callee13$(_context14){while(1)switch(_context14.prev=_context14.next){case 0:if(!(!actionMatch.route.action&&!actionMatch.route.lazy)){_context14.next=7;break;}error=getInternalRouterError(405,{method:request.method,pathname:new URL(request.url).pathname,routeId:actionMatch.route.id});if(!isRouteRequest){_context14.next=4;break;}throw error;case 4:result={type:ResultType.error,error:error};_context14.next=13;break;case 7:_context14.next=9;return callLoaderOrAction(\"action\",request,actionMatch,matches,manifest,mapRouteProperties,basename,true,isRouteRequest,requestContext);case 9:result=_context14.sent;if(!request.signal.aborted){_context14.next=13;break;}method=isRouteRequest?\"queryRoute\":\"query\";throw new Error(method+\"() call aborted\");case 13:if(!isRedirectResult(result)){_context14.next=15;break;}throw new Response(null,{status:result.status,headers:{Location:result.location}});case 15:if(!isDeferredResult(result)){_context14.next=20;break;}_error5=getInternalRouterError(400,{type:\"defer-action\"});if(!isRouteRequest){_context14.next=19;break;}throw _error5;case 19:result={type:ResultType.error,error:_error5};case 20:if(!isRouteRequest){_context14.next=24;break;}if(!isErrorResult(result)){_context14.next=23;break;}throw result.error;case 23:return _context14.abrupt(\"return\",{matches:[actionMatch],loaderData:{},actionData:_defineProperty({},actionMatch.route.id,result.data),errors:null,// Note: statusCode + headers are unused here since queryRoute will\n// return the raw Response or value\nstatusCode:200,loaderHeaders:{},actionHeaders:{},activeDeferreds:null});case 24:if(!isErrorResult(result)){_context14.next=30;break;}// Store off the pending error - we use it to determine which loaders\n// to call and will commit it when we complete the navigation\nboundaryMatch=findNearestBoundary(matches,actionMatch.route.id);_context14.next=28;return loadRouteData(request,matches,requestContext,undefined,_defineProperty({},boundaryMatch.route.id,result.error));case 28:_context13=_context14.sent;return _context14.abrupt(\"return\",_extends({},_context13,{statusCode:isRouteErrorResponse(result.error)?result.error.status:500,actionData:null,actionHeaders:_extends({},result.headers?_defineProperty({},actionMatch.route.id,result.headers):{})}));case 30:// Create a GET request for the loaders\nloaderRequest=new Request(request.url,{headers:request.headers,redirect:request.redirect,signal:request.signal});_context14.next=33;return loadRouteData(loaderRequest,matches,requestContext);case 33:context=_context14.sent;return _context14.abrupt(\"return\",_extends({},context,result.statusCode?{statusCode:result.statusCode}:{},{actionData:_defineProperty({},actionMatch.route.id,result.data),actionHeaders:_extends({},result.headers?_defineProperty({},actionMatch.route.id,result.headers):{})}));case 35:case\"end\":return _context14.stop();}},_callee13);}));return _submit.apply(this,arguments);}function loadRouteData(_x55,_x56,_x57,_x58,_x59){return _loadRouteData.apply(this,arguments);}function _loadRouteData(){_loadRouteData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(request,matches,requestContext,routeMatch,pendingActionError){var isRouteRequest,requestMatches,matchesToLoad,results,method,activeDeferreds,context,executedLoaders;return _regeneratorRuntime().wrap(function _callee14$(_context15){while(1)switch(_context15.prev=_context15.next){case 0:isRouteRequest=routeMatch!=null;// Short circuit if we have no loaders to run (queryRoute())\nif(!(isRouteRequest&&!(routeMatch!=null&&routeMatch.route.loader)&&!(routeMatch!=null&&routeMatch.route.lazy))){_context15.next=3;break;}throw getInternalRouterError(400,{method:request.method,pathname:new URL(request.url).pathname,routeId:routeMatch==null?void 0:routeMatch.route.id});case 3:requestMatches=routeMatch?[routeMatch]:getLoaderMatchesUntilBoundary(matches,Object.keys(pendingActionError||{})[0]);matchesToLoad=requestMatches.filter(function(m){return m.route.loader||m.route.lazy;});// Short circuit if we have no loaders to run (query())\nif(!(matchesToLoad.length===0)){_context15.next=7;break;}return _context15.abrupt(\"return\",{matches:matches,// Add a null for all matched routes for proper revalidation on the client\nloaderData:matches.reduce(function(acc,m){return Object.assign(acc,_defineProperty({},m.route.id,null));},{}),errors:pendingActionError||null,statusCode:200,loaderHeaders:{},activeDeferreds:null});case 7:_context15.next=9;return Promise.all(_toConsumableArray(matchesToLoad.map(function(match){return callLoaderOrAction(\"loader\",request,match,matches,manifest,mapRouteProperties,basename,true,isRouteRequest,requestContext);})));case 9:results=_context15.sent;if(!request.signal.aborted){_context15.next=13;break;}method=isRouteRequest?\"queryRoute\":\"query\";throw new Error(method+\"() call aborted\");case 13:// Process and commit output from loaders\nactiveDeferreds=new Map();context=processRouteLoaderData(matches,matchesToLoad,results,pendingActionError,activeDeferreds);// Add a null for any non-loader matches for proper revalidation on the client\nexecutedLoaders=new Set(matchesToLoad.map(function(match){return match.route.id;}));matches.forEach(function(match){if(!executedLoaders.has(match.route.id)){context.loaderData[match.route.id]=null;}});return _context15.abrupt(\"return\",_extends({},context,{matches:matches,activeDeferreds:activeDeferreds.size>0?Object.fromEntries(activeDeferreds.entries()):null}));case 18:case\"end\":return _context15.stop();}},_callee14);}));return _loadRouteData.apply(this,arguments);}return{dataRoutes:dataRoutes,query:query,queryRoute:queryRoute};}//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */function getStaticContextFromError(routes,context,error){var newContext=_extends({},context,{statusCode:500,errors:_defineProperty({},context._deepestRenderedBoundaryId||routes[0].id,error)});return newContext;}function isSubmissionNavigation(opts){return opts!=null&&\"formData\"in opts;}function normalizeTo(location,matches,basename,prependBasename,to,fromRouteId,relative){var contextualMatches;var activeRouteMatch;if(fromRouteId!=null&&relative!==\"path\"){// Grab matches up to the calling route so our route-relative logic is\n// relative to the correct source route.  When using relative:path,\n// fromRouteId is ignored since that is always relative to the current\n// location path\ncontextualMatches=[];var _iterator6=_createForOfIteratorHelper(matches),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var match=_step6.value;contextualMatches.push(match);if(match.route.id===fromRouteId){activeRouteMatch=match;break;}}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}}else{contextualMatches=matches;activeRouteMatch=matches[matches.length-1];}// Resolve the relative path\nvar path=resolveTo(to?to:\".\",getPathContributingMatches(contextualMatches).map(function(m){return m.pathnameBase;}),stripBasename(location.pathname,basename)||location.pathname,relative===\"path\");// When `to` is not specified we inherit search/hash from the current\n// location, unlike when to=\".\" and we just inherit the path.\n// See https://github.com/remix-run/remix/issues/927\nif(to==null){path.search=location.search;path.hash=location.hash;}// Add an ?index param for matched index routes if we don't already have one\nif((to==null||to===\"\"||to===\".\")&&activeRouteMatch&&activeRouteMatch.route.index&&!hasNakedIndexQuery(path.search)){path.search=path.search?path.search.replace(/^\\?/,\"?index&\"):\"?index\";}// If we're operating within a basename, prepend it to the pathname.  If\n// this is a root navigation, then just use the raw basename which allows\n// the basename to have full control over the presence of a trailing slash\n// on root actions\nif(prependBasename&&basename!==\"/\"){path.pathname=path.pathname===\"/\"?basename:joinPaths([basename,path.pathname]);}return createPath(path);}// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod,isFetcher,path,opts){// Return location verbatim on non-submission navigations\nif(!opts||!isSubmissionNavigation(opts)){return{path:path};}if(opts.formMethod&&!isValidMethod(opts.formMethod)){return{path:path,error:getInternalRouterError(405,{method:opts.formMethod})};}// Create a Submission on non-GET navigations\nvar submission;if(opts.formData){var formMethod=opts.formMethod||\"get\";submission={formMethod:normalizeFormMethod?formMethod.toUpperCase():formMethod.toLowerCase(),formAction:stripHashFromPath(path),formEncType:opts&&opts.formEncType||\"application/x-www-form-urlencoded\",formData:opts.formData};if(isMutationMethod(submission.formMethod)){return{path:path,submission:submission};}}// Flatten submission onto URLSearchParams for GET submissions\nvar parsedPath=parsePath(path);var searchParams=convertFormDataToSearchParams(opts.formData);// On GET navigation submissions we can drop the ?index param from the\n// resulting location since all loaders will run.  But fetcher GET submissions\n// only run a single loader so we need to preserve any incoming ?index params\nif(isFetcher&&parsedPath.search&&hasNakedIndexQuery(parsedPath.search)){searchParams.append(\"index\",\"\");}parsedPath.search=\"?\"+searchParams;return{path:createPath(parsedPath),submission:submission};}// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches,boundaryId){var boundaryMatches=matches;if(boundaryId){var index=matches.findIndex(function(m){return m.route.id===boundaryId;});if(index>=0){boundaryMatches=matches.slice(0,index);}}return boundaryMatches;}function getMatchesToLoad(history,state,matches,submission,location,isRevalidationRequired,cancelledDeferredRoutes,cancelledFetcherLoads,fetchLoadMatches,routesToUse,basename,pendingActionData,pendingError){var actionResult=pendingError?Object.values(pendingError)[0]:pendingActionData?Object.values(pendingActionData)[0]:undefined;var currentUrl=history.createURL(state.location);var nextUrl=history.createURL(location);// Pick navigation matches that are net-new or qualify for revalidation\nvar boundaryId=pendingError?Object.keys(pendingError)[0]:undefined;var boundaryMatches=getLoaderMatchesUntilBoundary(matches,boundaryId);var navigationMatches=boundaryMatches.filter(function(match,index){if(match.route.lazy){// We haven't loaded this route yet so we don't know if it's got a loader!\nreturn true;}if(match.route.loader==null){return false;}// Always call the loader on new route instances and pending defer cancellations\nif(isNewLoader(state.loaderData,state.matches[index],match)||cancelledDeferredRoutes.some(function(id){return id===match.route.id;})){return true;}// This is the default implementation for when we revalidate.  If the route\n// provides it's own implementation, then we give them full control but\n// provide this value so they can leverage it if needed after they check\n// their own specific use cases\nvar currentRouteMatch=state.matches[index];var nextRouteMatch=match;return shouldRevalidateLoader(match,_extends({currentUrl:currentUrl,currentParams:currentRouteMatch.params,nextUrl:nextUrl,nextParams:nextRouteMatch.params},submission,{actionResult:actionResult,defaultShouldRevalidate:// Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\nisRevalidationRequired||// Clicked the same link, resubmitted a GET form\ncurrentUrl.pathname+currentUrl.search===nextUrl.pathname+nextUrl.search||// Search params affect all loaders\ncurrentUrl.search!==nextUrl.search||isNewRouteInstance(currentRouteMatch,nextRouteMatch)}));});// Pick fetcher.loads that need to be revalidated\nvar revalidatingFetchers=[];fetchLoadMatches.forEach(function(f,key){// Don't revalidate if fetcher won't be present in the subsequent render\nif(!matches.some(function(m){return m.route.id===f.routeId;})){return;}var fetcherMatches=matchRoutes(routesToUse,f.path,basename);// If the fetcher path no longer matches, push it in with null matches so\n// we can trigger a 404 in callLoadersAndMaybeResolveData\nif(!fetcherMatches){revalidatingFetchers.push({key:key,routeId:f.routeId,path:f.path,matches:null,match:null,controller:null});return;}var fetcherMatch=getTargetMatch(fetcherMatches,f.path);if(cancelledFetcherLoads.includes(key)){revalidatingFetchers.push({key:key,routeId:f.routeId,path:f.path,matches:fetcherMatches,match:fetcherMatch,controller:new AbortController()});return;}// Revalidating fetchers are decoupled from the route matches since they\n// hit a static href, so they _always_ check shouldRevalidate and the\n// default is strictly if a revalidation is explicitly required (action\n// submissions, useRevalidator, X-Remix-Revalidate).\nvar shouldRevalidate=shouldRevalidateLoader(fetcherMatch,_extends({currentUrl:currentUrl,currentParams:state.matches[state.matches.length-1].params,nextUrl:nextUrl,nextParams:matches[matches.length-1].params},submission,{actionResult:actionResult,// Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\ndefaultShouldRevalidate:isRevalidationRequired}));if(shouldRevalidate){revalidatingFetchers.push({key:key,routeId:f.routeId,path:f.path,matches:fetcherMatches,match:fetcherMatch,controller:new AbortController()});}});return[navigationMatches,revalidatingFetchers];}function isNewLoader(currentLoaderData,currentMatch,match){var isNew=// [a] -> [a, b]\n!currentMatch||// [a, b] -> [a, c]\nmatch.route.id!==currentMatch.route.id;// Handle the case that we don't have data for a re-used route, potentially\n// from a prior error or from a cancelled pending deferred\nvar isMissingData=currentLoaderData[match.route.id]===undefined;// Always load if this is a net-new route or we don't yet have data\nreturn isNew||isMissingData;}function isNewRouteInstance(currentMatch,match){var currentPath=currentMatch.route.path;return(// param change for this match, /users/123 -> /users/456\ncurrentMatch.pathname!==match.pathname||// splat param changed, which is not present in match.path\n// e.g. /files/images/avatar.jpg -> files/finances.xls\ncurrentPath!=null&&currentPath.endsWith(\"*\")&&currentMatch.params[\"*\"]!==match.params[\"*\"]);}function shouldRevalidateLoader(loaderMatch,arg){if(loaderMatch.route.shouldRevalidate){var routeChoice=loaderMatch.route.shouldRevalidate(arg);if(typeof routeChoice===\"boolean\"){return routeChoice;}}return arg.defaultShouldRevalidate;}/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */function loadLazyRouteModule(_x60,_x61,_x62){return _loadLazyRouteModule.apply(this,arguments);}function _loadLazyRouteModule(){_loadLazyRouteModule=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(route,mapRouteProperties,manifest){var lazyRoute,routeToUpdate,routeUpdates,lazyRouteProperty,staticRouteValue,isPropertyStaticallyDefined;return _regeneratorRuntime().wrap(function _callee15$(_context16){while(1)switch(_context16.prev=_context16.next){case 0:if(route.lazy){_context16.next=2;break;}return _context16.abrupt(\"return\");case 2:_context16.next=4;return route.lazy();case 4:lazyRoute=_context16.sent;if(route.lazy){_context16.next=7;break;}return _context16.abrupt(\"return\");case 7:routeToUpdate=manifest[route.id];invariant(routeToUpdate,\"No route found in manifest\");// Update the route in place.  This should be safe because there's no way\n// we could yet be sitting on this route as we can't get there without\n// resolving lazy() first.\n//\n// This is different than the HMR \"update\" use-case where we may actively be\n// on the route being updated.  The main concern boils down to \"does this\n// mutation affect any ongoing navigations or any current state.matches\n// values?\".  If not, it should be safe to update in place.\nrouteUpdates={};for(lazyRouteProperty in lazyRoute){staticRouteValue=routeToUpdate[lazyRouteProperty];isPropertyStaticallyDefined=staticRouteValue!==undefined&&// This property isn't static since it should always be updated based\n// on the route updates\nlazyRouteProperty!==\"hasErrorBoundary\";warning(!isPropertyStaticallyDefined,\"Route \\\"\"+routeToUpdate.id+\"\\\" has a static property \\\"\"+lazyRouteProperty+\"\\\" \"+\"defined but its lazy function is also returning a value for this property. \"+(\"The lazy route property \\\"\"+lazyRouteProperty+\"\\\" will be ignored.\"));if(!isPropertyStaticallyDefined&&!immutableRouteKeys.has(lazyRouteProperty)){routeUpdates[lazyRouteProperty]=lazyRoute[lazyRouteProperty];}}// Mutate the route with the provided updates.  Do this first so we pass\n// the updated version to mapRouteProperties\nObject.assign(routeToUpdate,routeUpdates);// Mutate the `hasErrorBoundary` property on the route based on the route\n// updates and remove the `lazy` function so we don't resolve the lazy\n// route again.\nObject.assign(routeToUpdate,_extends({},mapRouteProperties(routeToUpdate),{lazy:undefined}));case 13:case\"end\":return _context16.stop();}},_callee15);}));return _loadLazyRouteModule.apply(this,arguments);}function callLoaderOrAction(_x63,_x64,_x65,_x66,_x67,_x68,_x69,_x70,_x71,_x72){return _callLoaderOrAction.apply(this,arguments);}// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction _callLoaderOrAction(){_callLoaderOrAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(type,request,match,matches,manifest,mapRouteProperties,basename,isStaticRequest,isRouteRequest,requestContext){var resultType,result,onReject,runHandler,handler,values,url,pathname,_url,_pathname,status,location,currentUrl,_url2,isSameBasename,data,contentType,_result$init,_result$init2;return _regeneratorRuntime().wrap(function _callee16$(_context17){while(1)switch(_context17.prev=_context17.next){case 0:if(isStaticRequest===void 0){isStaticRequest=false;}if(isRouteRequest===void 0){isRouteRequest=false;}runHandler=function runHandler(handler){// Setup a promise we can race against so that abort signals short circuit\nvar reject;var abortPromise=new Promise(function(_,r){return reject=r;});onReject=function onReject(){return reject();};request.signal.addEventListener(\"abort\",onReject);return Promise.race([handler({request:request,params:match.params,context:requestContext}),abortPromise]);};_context17.prev=3;handler=match.route[type];if(!match.route.lazy){_context17.next=31;break;}if(!handler){_context17.next=13;break;}_context17.next=9;return Promise.all([runHandler(handler),loadLazyRouteModule(match.route,mapRouteProperties,manifest)]);case 9:values=_context17.sent;result=values[0];_context17.next=29;break;case 13:_context17.next=15;return loadLazyRouteModule(match.route,mapRouteProperties,manifest);case 15:handler=match.route[type];if(!handler){_context17.next=22;break;}_context17.next=19;return runHandler(handler);case 19:result=_context17.sent;_context17.next=29;break;case 22:if(!(type===\"action\")){_context17.next=28;break;}url=new URL(request.url);pathname=url.pathname+url.search;throw getInternalRouterError(405,{method:request.method,pathname:pathname,routeId:match.route.id});case 28:return _context17.abrupt(\"return\",{type:ResultType.data,data:undefined});case 29:_context17.next=40;break;case 31:if(handler){_context17.next=37;break;}_url=new URL(request.url);_pathname=_url.pathname+_url.search;throw getInternalRouterError(404,{pathname:_pathname});case 37:_context17.next=39;return runHandler(handler);case 39:result=_context17.sent;case 40:invariant(result!==undefined,\"You defined \"+(type===\"action\"?\"an action\":\"a loader\")+\" for route \"+(\"\\\"\"+match.route.id+\"\\\" but didn't return anything from your `\"+type+\"` \")+\"function. Please return a value or `null`.\");_context17.next=47;break;case 43:_context17.prev=43;_context17.t0=_context17[\"catch\"](3);resultType=ResultType.error;result=_context17.t0;case 47:_context17.prev=47;if(onReject){request.signal.removeEventListener(\"abort\",onReject);}return _context17.finish(47);case 50:if(!isResponse(result)){_context17.next=75;break;}status=result.status;// Process redirects\nif(!redirectStatusCodes.has(status)){_context17.next=60;break;}location=result.headers.get(\"Location\");invariant(location,\"Redirects returned/thrown from loaders/actions must have a Location header\");// Support relative routing in internal redirects\nif(!ABSOLUTE_URL_REGEX.test(location)){location=normalizeTo(new URL(request.url),matches.slice(0,matches.indexOf(match)+1),basename,true,location);}else if(!isStaticRequest){// Strip off the protocol+origin for same-origin + same-basename absolute\n// redirects. If this is a static request, we can let it go back to the\n// browser as-is\ncurrentUrl=new URL(request.url);_url2=location.startsWith(\"//\")?new URL(currentUrl.protocol+location):new URL(location);isSameBasename=stripBasename(_url2.pathname,basename)!=null;if(_url2.origin===currentUrl.origin&&isSameBasename){location=_url2.pathname+_url2.search+_url2.hash;}}// Don't process redirects in the router during static requests requests.\n// Instead, throw the Response and let the server handle it with an HTTP\n// redirect.  We also update the Location header in place in this flow so\n// basename and relative routing is taken into account\nif(!isStaticRequest){_context17.next=59;break;}result.headers.set(\"Location\",location);throw result;case 59:return _context17.abrupt(\"return\",{type:ResultType.redirect,status:status,location:location,revalidate:result.headers.get(\"X-Remix-Revalidate\")!==null});case 60:if(!isRouteRequest){_context17.next=62;break;}throw{type:resultType||ResultType.data,response:result};case 62:contentType=result.headers.get(\"Content-Type\");// Check between word boundaries instead of startsWith() due to the last\n// paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\nif(!(contentType&&/\\bapplication\\/json\\b/.test(contentType))){_context17.next=69;break;}_context17.next=66;return result.json();case 66:data=_context17.sent;_context17.next=72;break;case 69:_context17.next=71;return result.text();case 71:data=_context17.sent;case 72:if(!(resultType===ResultType.error)){_context17.next=74;break;}return _context17.abrupt(\"return\",{type:resultType,error:new ErrorResponse(status,result.statusText,data),headers:result.headers});case 74:return _context17.abrupt(\"return\",{type:ResultType.data,data:data,statusCode:result.status,headers:result.headers});case 75:if(!(resultType===ResultType.error)){_context17.next=77;break;}return _context17.abrupt(\"return\",{type:resultType,error:result});case 77:if(!isDeferredData(result)){_context17.next=79;break;}return _context17.abrupt(\"return\",{type:ResultType.deferred,deferredData:result,statusCode:(_result$init=result.init)==null?void 0:_result$init.status,headers:((_result$init2=result.init)==null?void 0:_result$init2.headers)&&new Headers(result.init.headers)});case 79:return _context17.abrupt(\"return\",{type:ResultType.data,data:result});case 80:case\"end\":return _context17.stop();}},_callee16,null,[[3,43,47,50]]);}));return _callLoaderOrAction.apply(this,arguments);}function createClientSideRequest(history,location,signal,submission){var url=history.createURL(stripHashFromPath(location)).toString();var init={signal:signal};if(submission&&isMutationMethod(submission.formMethod)){var formMethod=submission.formMethod,formEncType=submission.formEncType,formData=submission.formData;// Didn't think we needed this but it turns out unlike other methods, patch\n// won't be properly normalized to uppercase and results in a 405 error.\n// See: https://fetch.spec.whatwg.org/#concept-method\ninit.method=formMethod.toUpperCase();init.body=formEncType===\"application/x-www-form-urlencoded\"?convertFormDataToSearchParams(formData):formData;}// Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\nreturn new Request(url,init);}function convertFormDataToSearchParams(formData){var searchParams=new URLSearchParams();var _iterator7=_createForOfIteratorHelper(formData.entries()),_step7;try{for(_iterator7.s();!(_step7=_iterator7.n()).done;){var _step7$value=_slicedToArray(_step7.value,2),key=_step7$value[0],value=_step7$value[1];// https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\nsearchParams.append(key,value instanceof File?value.name:value);}}catch(err){_iterator7.e(err);}finally{_iterator7.f();}return searchParams;}function processRouteLoaderData(matches,matchesToLoad,results,pendingError,activeDeferreds){// Fill in loaderData/errors from our loaders\nvar loaderData={};var errors=null;var statusCode;var foundError=false;var loaderHeaders={};// Process loader results into state.loaderData/state.errors\nresults.forEach(function(result,index){var id=matchesToLoad[index].route.id;invariant(!isRedirectResult(result),\"Cannot handle redirect results in processLoaderData\");if(isErrorResult(result)){// Look upwards from the matched route for the closest ancestor\n// error boundary, defaulting to the root match\nvar boundaryMatch=findNearestBoundary(matches,id);var error=result.error;// If we have a pending action error, we report it at the highest-route\n// that throws a loader error, and then clear it out to indicate that\n// it was consumed\nif(pendingError){error=Object.values(pendingError)[0];pendingError=undefined;}errors=errors||{};// Prefer higher error values if lower errors bubble to the same boundary\nif(errors[boundaryMatch.route.id]==null){errors[boundaryMatch.route.id]=error;}// Clear our any prior loaderData for the throwing route\nloaderData[id]=undefined;// Once we find our first (highest) error, we set the status code and\n// prevent deeper status codes from overriding\nif(!foundError){foundError=true;statusCode=isRouteErrorResponse(result.error)?result.error.status:500;}if(result.headers){loaderHeaders[id]=result.headers;}}else{if(isDeferredResult(result)){activeDeferreds.set(id,result.deferredData);loaderData[id]=result.deferredData.data;}else{loaderData[id]=result.data;}// Error status codes always override success status codes, but if all\n// loaders are successful we take the deepest status code.\nif(result.statusCode!=null&&result.statusCode!==200&&!foundError){statusCode=result.statusCode;}if(result.headers){loaderHeaders[id]=result.headers;}}});// If we didn't consume the pending action error (i.e., all loaders\n// resolved), then consume it here.  Also clear out any loaderData for the\n// throwing route\nif(pendingError){errors=pendingError;loaderData[Object.keys(pendingError)[0]]=undefined;}return{loaderData:loaderData,errors:errors,statusCode:statusCode||200,loaderHeaders:loaderHeaders};}function processLoaderData(state,matches,matchesToLoad,results,pendingError,revalidatingFetchers,fetcherResults,activeDeferreds){var _processRouteLoaderDa=processRouteLoaderData(matches,matchesToLoad,results,pendingError,activeDeferreds),loaderData=_processRouteLoaderDa.loaderData,errors=_processRouteLoaderDa.errors;// Process results from our revalidating fetchers\nfor(var index=0;index<revalidatingFetchers.length;index++){var _revalidatingFetchers=revalidatingFetchers[index],key=_revalidatingFetchers.key,match=_revalidatingFetchers.match,controller=_revalidatingFetchers.controller;invariant(fetcherResults!==undefined&&fetcherResults[index]!==undefined,\"Did not find corresponding fetcher result\");var result=fetcherResults[index];// Process fetcher non-redirect errors\nif(controller&&controller.signal.aborted){// Nothing to do for aborted fetchers\ncontinue;}else if(isErrorResult(result)){var boundaryMatch=findNearestBoundary(state.matches,match==null?void 0:match.route.id);if(!(errors&&errors[boundaryMatch.route.id])){errors=_extends({},errors,_defineProperty({},boundaryMatch.route.id,result.error));}state.fetchers.delete(key);}else if(isRedirectResult(result)){// Should never get here, redirects should get processed above, but we\n// keep this to type narrow to a success result in the else\ninvariant(false,\"Unhandled fetcher revalidation redirect\");}else if(isDeferredResult(result)){// Should never get here, deferred data should be awaited for fetchers\n// in resolveDeferredResults\ninvariant(false,\"Unhandled fetcher deferred data\");}else{var doneFetcher={state:\"idle\",data:result.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,\" _hasFetcherDoneAnything \":true};state.fetchers.set(key,doneFetcher);}}return{loaderData:loaderData,errors:errors};}function mergeLoaderData(loaderData,newLoaderData,matches,errors){var mergedLoaderData=_extends({},newLoaderData);var _iterator8=_createForOfIteratorHelper(matches),_step8;try{for(_iterator8.s();!(_step8=_iterator8.n()).done;){var match=_step8.value;var id=match.route.id;if(newLoaderData.hasOwnProperty(id)){if(newLoaderData[id]!==undefined){mergedLoaderData[id]=newLoaderData[id];}}else if(loaderData[id]!==undefined&&match.route.loader){// Preserve existing keys not included in newLoaderData and where a loader\n// wasn't removed by HMR\nmergedLoaderData[id]=loaderData[id];}if(errors&&errors.hasOwnProperty(id)){// Don't keep any loader data below the boundary\nbreak;}}}catch(err){_iterator8.e(err);}finally{_iterator8.f();}return mergedLoaderData;}// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches,routeId){var eligibleMatches=routeId?matches.slice(0,matches.findIndex(function(m){return m.route.id===routeId;})+1):_toConsumableArray(matches);return eligibleMatches.reverse().find(function(m){return m.route.hasErrorBoundary===true;})||matches[0];}function getShortCircuitMatches(routes){// Prefer a root layout route if present, otherwise shim in a route object\nvar route=routes.find(function(r){return r.index||!r.path||r.path===\"/\";})||{id:\"__shim-error-route__\"};return{matches:[{params:{},pathname:\"\",pathnameBase:\"\",route:route}],route:route};}function getInternalRouterError(status,_temp4){var _ref11=_temp4===void 0?{}:_temp4,pathname=_ref11.pathname,routeId=_ref11.routeId,method=_ref11.method,type=_ref11.type;var statusText=\"Unknown Server Error\";var errorMessage=\"Unknown @remix-run/router error\";if(status===400){statusText=\"Bad Request\";if(method&&pathname&&routeId){errorMessage=\"You made a \"+method+\" request to \\\"\"+pathname+\"\\\" but \"+(\"did not provide a `loader` for route \\\"\"+routeId+\"\\\", \")+\"so there is no way to handle the request.\";}else if(type===\"defer-action\"){errorMessage=\"defer() is not supported in actions\";}}else if(status===403){statusText=\"Forbidden\";errorMessage=\"Route \\\"\"+routeId+\"\\\" does not match URL \\\"\"+pathname+\"\\\"\";}else if(status===404){statusText=\"Not Found\";errorMessage=\"No route matches URL \\\"\"+pathname+\"\\\"\";}else if(status===405){statusText=\"Method Not Allowed\";if(method&&pathname&&routeId){errorMessage=\"You made a \"+method.toUpperCase()+\" request to \\\"\"+pathname+\"\\\" but \"+(\"did not provide an `action` for route \\\"\"+routeId+\"\\\", \")+\"so there is no way to handle the request.\";}else if(method){errorMessage=\"Invalid request method \\\"\"+method.toUpperCase()+\"\\\"\";}}return new ErrorResponse(status||500,statusText,new Error(errorMessage),true);}// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results){for(var i=results.length-1;i>=0;i--){var result=results[i];if(isRedirectResult(result)){return result;}}}function stripHashFromPath(path){var parsedPath=typeof path===\"string\"?parsePath(path):path;return createPath(_extends({},parsedPath,{hash:\"\"}));}function isHashChangeOnly(a,b){if(a.pathname!==b.pathname||a.search!==b.search){return false;}if(a.hash===\"\"){// No hash -> hash\nreturn b.hash!==\"\";}else if(a.hash===b.hash){// current hash -> same hash\nreturn true;}else if(b.hash!==\"\"){// current hash -> new hash\nreturn true;}return false;}function isDeferredResult(result){return result.type===ResultType.deferred;}function isErrorResult(result){return result.type===ResultType.error;}function isRedirectResult(result){return(result&&result.type)===ResultType.redirect;}function isDeferredData(value){var deferred=value;return deferred&&typeof deferred===\"object\"&&typeof deferred.data===\"object\"&&typeof deferred.subscribe===\"function\"&&typeof deferred.cancel===\"function\"&&typeof deferred.resolveData===\"function\";}function isResponse(value){return value!=null&&typeof value.status===\"number\"&&typeof value.statusText===\"string\"&&typeof value.headers===\"object\"&&typeof value.body!==\"undefined\";}function isRedirectResponse(result){if(!isResponse(result)){return false;}var status=result.status;var location=result.headers.get(\"Location\");return status>=300&&status<=399&&location!=null;}function isQueryRouteResponse(obj){return obj&&isResponse(obj.response)&&(obj.type===ResultType.data||ResultType.error);}function isValidMethod(method){return validRequestMethods.has(method.toLowerCase());}function isMutationMethod(method){return validMutationMethods.has(method.toLowerCase());}function resolveDeferredResults(_x73,_x74,_x75,_x76,_x77,_x78){return _resolveDeferredResults.apply(this,arguments);}function _resolveDeferredResults(){_resolveDeferredResults=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(currentMatches,matchesToLoad,results,signals,isFetcher,currentLoaderData){var _loop,index,_ret;return _regeneratorRuntime().wrap(function _callee17$(_context19){while(1)switch(_context19.prev=_context19.next){case 0:_loop=/*#__PURE__*/_regeneratorRuntime().mark(function _loop(index){var result,match,currentMatch,isRevalidatingLoader,signal;return _regeneratorRuntime().wrap(function _loop$(_context18){while(1)switch(_context18.prev=_context18.next){case 0:result=results[index];match=matchesToLoad[index];// If we don't have a match, then we can have a deferred result to do\n// anything with.  This is for revalidating fetchers where the route was\n// removed during HMR\nif(match){_context18.next=4;break;}return _context18.abrupt(\"return\",\"continue\");case 4:currentMatch=currentMatches.find(function(m){return m.route.id===match.route.id;});isRevalidatingLoader=currentMatch!=null&&!isNewRouteInstance(currentMatch,match)&&(currentLoaderData&&currentLoaderData[match.route.id])!==undefined;if(!(isDeferredResult(result)&&(isFetcher||isRevalidatingLoader))){_context18.next=11;break;}// Note: we do not have to touch activeDeferreds here since we race them\n// against the signal in resolveDeferredData and they'll get aborted\n// there if needed\nsignal=signals[index];invariant(signal,\"Expected an AbortSignal for revalidating fetcher deferred result\");_context18.next=11;return resolveDeferredData(result,signal,isFetcher).then(function(result){if(result){results[index]=result||results[index];}});case 11:case\"end\":return _context18.stop();}},_loop);});index=0;case 2:if(!(index<results.length)){_context19.next=10;break;}return _context19.delegateYield(_loop(index),\"t0\",4);case 4:_ret=_context19.t0;if(!(_ret===\"continue\")){_context19.next=7;break;}return _context19.abrupt(\"continue\",7);case 7:index++;_context19.next=2;break;case 10:case\"end\":return _context19.stop();}},_callee17);}));return _resolveDeferredResults.apply(this,arguments);}function resolveDeferredData(_x79,_x80,_x81){return _resolveDeferredData.apply(this,arguments);}function _resolveDeferredData(){_resolveDeferredData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18(result,signal,unwrap){var aborted;return _regeneratorRuntime().wrap(function _callee18$(_context20){while(1)switch(_context20.prev=_context20.next){case 0:if(unwrap===void 0){unwrap=false;}_context20.next=3;return result.deferredData.resolveData(signal);case 3:aborted=_context20.sent;if(!aborted){_context20.next=6;break;}return _context20.abrupt(\"return\");case 6:if(!unwrap){_context20.next=14;break;}_context20.prev=7;return _context20.abrupt(\"return\",{type:ResultType.data,data:result.deferredData.unwrappedData});case 11:_context20.prev=11;_context20.t0=_context20[\"catch\"](7);return _context20.abrupt(\"return\",{type:ResultType.error,error:_context20.t0});case 14:return _context20.abrupt(\"return\",{type:ResultType.data,data:result.deferredData.data});case 15:case\"end\":return _context20.stop();}},_callee18,null,[[7,11]]);}));return _resolveDeferredData.apply(this,arguments);}function hasNakedIndexQuery(search){return new URLSearchParams(search).getAll(\"index\").some(function(v){return v===\"\";});}// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(match,loaderData){var route=match.route,pathname=match.pathname,params=match.params;return{id:route.id,pathname:pathname,params:params,data:loaderData[route.id],handle:route.handle};}function getTargetMatch(matches,location){var search=typeof location===\"string\"?parsePath(location).search:location.search;if(matches[matches.length-1].route.index&&hasNakedIndexQuery(search||\"\")){// Return the leaf index route when index is present\nreturn matches[matches.length-1];}// Otherwise grab the deepest \"path contributing\" match (ignoring index and\n// pathless layout routes)\nvar pathMatches=getPathContributingMatches(matches);return pathMatches[pathMatches.length-1];}//#endregion\nexport{AbortedDeferredError,Action,ErrorResponse,IDLE_BLOCKER,IDLE_FETCHER,IDLE_NAVIGATION,UNSAFE_DEFERRED_SYMBOL,DeferredData as UNSAFE_DeferredData,convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes,getPathContributingMatches as UNSAFE_getPathContributingMatches,invariant as UNSAFE_invariant,warning as UNSAFE_warning,createBrowserHistory,createHashHistory,createMemoryHistory,createPath,createRouter,createStaticHandler,defer,generatePath,getStaticContextFromError,getToPathname,isDeferredData,isRouteErrorResponse,joinPaths,json,matchPath,matchRoutes,normalizePathname,parsePath,redirect,resolvePath,resolveTo,stripBasename};","map":{"version":3,"names":["Action","PopStateEventType","createMemoryHistory","options","_options","_options$initialEntri","initialEntries","initialIndex","_options$v5Compat","v5Compat","entries","map","entry","index","createMemoryLocation","state","undefined","clampIndex","length","action","Pop","listener","n","Math","min","max","getCurrentLocation","to","key","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","history","createURL","URL","encodeLocation","path","parsePath","search","hash","push","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","fn","createBrowserHistory","createBrowserLocation","window","globalHistory","_window$location","usr","createBrowserHref","getUrlBasedHistory","createHashHistory","createHashLocation","_parsePath","substr","_parsePath$pathname","_parsePath$search","_parsePath$hash","createHashHref","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","validateHashLocation","invariant","value","message","Error","cond","console","warn","e","createKey","random","toString","getHistoryState","idx","current","_extends","_ref","_ref$pathname","_ref$search","_ref$hash","parsedPath","searchIndex","getLocation","validateLocation","_options2","_options2$window","defaultView","_options2$v5Compat","getIndex","replaceState","handlePop","historyState","pushState","error","assign","origin","addEventListener","removeEventListener","ResultType","immutableRouteKeys","Set","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","treePath","concat","_toConsumableArray","id","join","children","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","i","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","meta","caseSensitive","childrenIndex","startsWith","joinPaths","routesMeta","score","computeScore","forEach","_route$path","includes","_iterator","_createForOfIteratorHelper","explodeOptionalSegments","_step","s","done","exploded","err","f","segments","split","_segments","_toArray","first","rest","isOptional","endsWith","required","restExploded","result","apply","subpath","sort","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","filter","reduce","segment","test","siblings","every","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","Object","params","pathnameBase","normalizePathname","generatePath","originalPath","prefix","array","isLastSegment","star","starParam","keyMatch","_keyMatch","_slicedToArray","optional","param","pattern","_compilePath","compilePath","_compilePath2","matcher","paramNames","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","regexpSource","_","RegExp","decodeURI","decodeURIComponent","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","_ref3","toPathname","_ref3$search","_ref3$hash","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","getToPathname","paths","json","data","init","responseInit","status","headers","Headers","has","set","Response","AbortedDeferredError","_Error","_inherits","_super","_createSuper","_classCallCheck","arguments","_createClass","_wrapNativeSuper","DeferredData","_this","pendingKeysSet","subscribers","deferredKeys","Array","isArray","reject","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","_ref4","_defineProperty","trackPromise","_this2","add","promise","race","then","onSettle","catch","defineProperty","get","aborted","delete","emit","settledKey","subscriber","subscribe","_this3","cancel","_this4","abort","v","k","_resolveData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this5","wrap","_callee$","_context","prev","next","resolve","sent","abrupt","stop","resolveData","_x","size","_ref2","_ref5","unwrapTrackedPromise","isTrackedPromise","_tracked","_error","_data","defer","redirect","ErrorResponse","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","isBrowser","createElement","isServer","defaultMapRouteProperties","hasErrorBoundary","Boolean","createRouter","detectErrorBoundary","dataRoutes","inFlightDataRoutes","future","v7_normalizeFormMethod","v7_prependBasename","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","_getShortCircuitMatch","getShortCircuitMatches","initialized","m","lazy","loader","router","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","Map","blockers","pendingAction","pendingPreventScrollReset","pendingNavigationController","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","initialize","blockerKey","shouldBlockNavigation","currentLocation","updateBlocker","deleteBlocker","updateState","startNavigation","dispose","clear","deleteFetcher","newState","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","_iterator2","_step2","_step2$value","getSavedScrollPosition","navigate","_x2","_x3","_navigate","_callee2","opts","normalizedPath","_normalizeNavigateOpt2","submission","userReplace","_callee2$","_context2","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","pendingError","revalidate","interruptActiveLoads","startUninterruptedRevalidation","overrideNavigation","_x4","_x5","_x6","_startNavigation","_callee3","routesToUse","loadingNavigation","_getShortCircuitMatch2","notFoundMatches","_route","request","pendingActionData","actionOutput","_yield$handleLoaders","shortCircuited","_callee3$","_context3","saveScrollPosition","cancelActiveDeferreds","isHashChangeOnly","createClientSideRequest","findNearestBoundary","handleAction","pendingActionError","Request","handleLoaders","fetcherSubmission","_x7","_x8","_x9","_x10","_x11","_handleAction","_callee4","actionMatch","boundaryMatch","_callee4$","_context4","getTargetMatch","type","method","routeId","callLoaderOrAction","isRedirectResult","startRedirectNavigation","isErrorResult","isDeferredResult","_x12","_x13","_x14","_x15","_x16","_x17","_x18","_x19","_x20","_handleLoaders","_callee5","activeSubmission","_getMatchesToLoad","_getMatchesToLoad2","matchesToLoad","revalidatingFetchers","_updatedFetchers","abortPendingFetchRevalidations","_yield$callLoadersAnd","results","loaderResults","fetcherResults","_processLoaderData","updatedFetchers","didAbortFetchLoads","shouldUpdateFetchers","_callee5$","_context5","getMatchesToLoad","markFetchRedirectsDone","rf","fetcher","revalidatingFetcher","abortFetcher","callLoadersAndMaybeResolveData","findRedirect","processLoaderData","deferredData","abortStaleFetchLoads","getFetcher","fetch","setFetcherError","_normalizeNavigateOpt","handleFetcherAction","handleFetcherLoader","_x21","_x22","_x23","_x24","_x25","_x26","_handleFetcherAction","_callee6","requestMatches","_error2","existingFetcher","abortController","fetchRequest","actionResult","loadingFetcher","revalidationRequest","loadId","loadFetcher","_getMatchesToLoad3","_getMatchesToLoad4","_yield$callLoadersAnd2","_processLoaderData2","doneFetcher","_callee6$","_context6","isFetchActionRedirect","staleKey","_x27","_x28","_x29","_x30","_x31","_x32","_handleFetcherLoader","_callee7","_callee7$","_context7","resolveDeferredData","t0","_x33","_x34","_x35","_startRedirectNavigation","_callee8","_temp","_window","_ref6","redirectLocation","isDifferentBasename","redirectHistoryAction","_state$navigation","_callee8$","_context8","_isFetchActionRedirect","_x36","_x37","_x38","_x39","_x40","_callLoadersAndMaybeResolveData","_callee9","currentMatches","fetchersToLoad","_callee9$","_context9","all","resolveDeferredResults","_cancelledDeferredRou","markFetchersDone","_iterator3","_step3","doneKeys","_iterator4","_step4","landedId","yeetedKeys","_iterator5","_step5","_step5$value","getBlocker","blocker","newBlocker","_entries","blockerFunction","predicate","cancelledRouteIds","dfd","enableScrollRestoration","positions","getPosition","getKey","y","userMatches","createUseMatchesMatch","_internalSetRoutes","newRoutes","_internalFetchControllers","_internalActiveDeferreds","UNSAFE_DEFERRED_SYMBOL","Symbol","createStaticHandler","query","_x41","_x42","_query","_callee10","_temp2","_ref7","requestContext","_getShortCircuitMatch3","methodNotAllowedMatches","_error4","_getShortCircuitMatch4","_route2","_callee10$","_context10","isValidMethod","statusCode","loaderHeaders","actionHeaders","queryImpl","isResponse","queryRoute","_x43","_x44","_queryRoute","_callee11","_temp3","_ref8","_result$activeDeferre","_callee11$","_context11","find","values","_x45","_x46","_x47","_x48","_x49","_queryImpl","_callee12","routeMatch","_result","_callee12$","_context12","submit","loadRouteData","isQueryRouteResponse","isRedirectResponse","response","_x50","_x51","_x52","_x53","_x54","_submit","_callee13","isRouteRequest","_error5","_context13","loaderRequest","context","_callee13$","_context14","Location","_x55","_x56","_x57","_x58","_x59","_loadRouteData","_callee14","executedLoaders","_callee14$","_context15","getLoaderMatchesUntilBoundary","processRouteLoaderData","fromEntries","getStaticContextFromError","newContext","_deepestRenderedBoundaryId","isSubmissionNavigation","prependBasename","contextualMatches","activeRouteMatch","_iterator6","_step6","hasNakedIndexQuery","normalizeFormMethod","isFetcher","toUpperCase","stripHashFromPath","searchParams","convertFormDataToSearchParams","append","boundaryId","boundaryMatches","findIndex","currentUrl","nextUrl","navigationMatches","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","routeChoice","loadLazyRouteModule","_x60","_x61","_x62","_loadLazyRouteModule","_callee15","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","staticRouteValue","isPropertyStaticallyDefined","_callee15$","_context16","_x63","_x64","_x65","_x66","_x67","_x68","_x69","_x70","_x71","_x72","_callLoaderOrAction","_callee16","isStaticRequest","resultType","onReject","runHandler","handler","_url","_pathname","_url2","isSameBasename","contentType","_result$init","_result$init2","_callee16$","_context17","finish","protocol","text","isDeferredData","deferred","body","URLSearchParams","_iterator7","_step7","_step7$value","File","name","foundError","_processRouteLoaderDa","_revalidatingFetchers","newLoaderData","mergedLoaderData","_iterator8","_step8","hasOwnProperty","eligibleMatches","reverse","_temp4","_ref11","errorMessage","obj","_x73","_x74","_x75","_x76","_x77","_x78","_resolveDeferredResults","_callee17","signals","_loop","_ret","_callee17$","_context19","isRevalidatingLoader","_loop$","_context18","delegateYield","_x79","_x80","_x81","_resolveDeferredData","_callee18","unwrap","_callee18$","_context20","unwrappedData","getAll","handle","pathMatches"],"sources":["/home/kubigor/projects/business_website/src/node_modules/@remix-run/router/history.ts","/home/kubigor/projects/business_website/src/node_modules/@remix-run/router/utils.ts","/home/kubigor/projects/business_website/src/node_modules/@remix-run/router/router.ts"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { warning, invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on <Form>,\n * useSubmit(), <fetcher.Form>, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\";\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport interface Submission {\n  formMethod: FormMethod | V7_FormMethod;\n  formAction: string;\n  formEncType: FormEncType;\n  formData: FormData;\n}\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    formData?: Submission[\"formData\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<Omit<R, ImmutableRouteKey>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        const starParam = params[star];\n\n        // Apply the splat\n        return starParam;\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n\n        if (optional === \"?\") {\n          return param == null ? \"\" : param;\n        }\n\n        if (param == null) {\n          invariant(false, `Missing \":${key}\" param`);\n        }\n\n        return param;\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, null, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  DataResult,\n  DeferredData,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  DetectErrorBoundaryFunction,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  ShouldRevalidateFunction,\n  RouteManifest,\n  ImmutableRouteKey,\n  ActionFunction,\n  LoaderFunction,\n  V7_MutationFormMethod,\n  V7_FormMethod,\n  HTMLFormMethod,\n  MutationFormMethod,\n  MapRoutePropertiesFunction,\n} from \"./utils\";\nimport {\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterNavigateOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\ntype BaseNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  fromRouteId?: string;\n};\n\n/**\n * Options for a navigate() call for a Link navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a Form navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n  formData: FormData;\n};\n\n/**\n * Options to pass to navigate() for either a Link or Form navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions =\n  | Omit<LinkNavigateOptions, \"replace\">\n  | Omit<SubmissionNavigateOptions, \"replace\">;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: FormMethod | V7_FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: FormMethod | V7_FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: FormMethod | V7_FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: FormMethod | V7_FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              deleteBlocker(blockerKey!);\n              updateState({ blockers: new Map(router.state.blockers) });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers: new Map(state.blockers),\n    });\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          deleteBlocker(blockerKey!);\n          updateState({ blockers: new Map(state.blockers) });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a mutation submission\n    // For example, on /page#hash and submit a <Form method=\"post\"> which will\n    // default to a navigation to /page\n    if (\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        ...opts.submission,\n      };\n      loadingNavigation = navigation;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts?: { replace?: boolean }\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation: NavigationStates[\"Submitting\"] = {\n      state: \"submitting\",\n      location,\n      ...submission,\n    };\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n    if (!loadingNavigation) {\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        ...submission,\n      };\n      loadingNavigation = navigation;\n    }\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission || fetcherSubmission\n        ? submission || fetcherSubmission\n        : loadingNavigation.formMethod &&\n          loadingNavigation.formAction &&\n          loadingNavigation.formData &&\n          loadingNavigation.formEncType\n        ? {\n            formMethod: loadingNavigation.formMethod,\n            formAction: loadingNavigation.formAction,\n            formData: loadingNavigation.formData,\n            formEncType: loadingNavigation.formEncType,\n          }\n        : undefined;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n        ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach((rf) => {\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath })\n      );\n      return;\n    }\n\n    let { path, submission } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher: FetcherStates[\"Submitting\"] = {\n      state: \"submitting\",\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher: FetcherStates[\"Loading\"] = {\n        state: \"loading\",\n        ...submission,\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, loadingFetcher);\n      updateState({ fetchers: new Map(state.fetchers) });\n\n      return startRedirectNavigation(state, actionResult, {\n        submission,\n        isFetchActionRedirect: true,\n      });\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      data: actionResult.data,\n      ...submission,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: existingFetcher && existingFetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      fetchRedirectIds.add(key);\n      await startRedirectNavigation(state, result);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      replace,\n      isFetchActionRedirect,\n    }: {\n      submission?: Submission;\n      replace?: boolean;\n      isFetchActionRedirect?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(\n      state.location,\n      redirect.location,\n      // TODO: This can be removed once we get rid of useTransition in Remix v2\n      {\n        _isRedirect: true,\n        ...(isFetchActionRedirect ? { _isFetchActionRedirect: true } : {}),\n      }\n    );\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n    // Check if this an absolute external redirect that goes to a new origin\n    if (\n      ABSOLUTE_URL_REGEX.test(redirect.location) &&\n      isBrowser &&\n      typeof window?.location !== \"undefined\"\n    ) {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, basename) == null;\n\n      if (window.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          window.location.replace(redirect.location);\n        } else {\n          window.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType, formData } = state.navigation;\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData,\n      };\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      submission &&\n      isMutationMethod(submission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...submission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n        },\n        fetcherSubmission: submission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    state.blockers.set(key, newBlocker);\n    updateState({ blockers: new Map(state.blockers) });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || ((location) => location.key);\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    inFlightDataRoutes = newRoutes;\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        true,\n        isRouteRequest,\n        requestContext\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          true,\n          isRouteRequest,\n          requestContext\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return opts != null && \"formData\" in opts;\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: RouterNavigateOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  // Create a Submission on non-GET navigations\n  let submission: Submission | undefined;\n  if (opts.formData) {\n    let formMethod = opts.formMethod || \"get\";\n    submission = {\n      formMethod: normalizeFormMethod\n        ? (formMethod.toUpperCase() as V7_FormMethod)\n        : (formMethod.toLowerCase() as FormMethod),\n      formAction: stripHashFromPath(path),\n      formEncType:\n        (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n      formData: opts.formData,\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return { path, submission };\n    }\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // hit a static href, so they _always_ check shouldRevalidate and the\n    // default is strictly if a revalidation is explicitly required (action\n    // submissions, useRevalidator, X-Remix-Revalidate).\n    let shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n      currentUrl,\n      currentParams: state.matches[state.matches.length - 1].params,\n      nextUrl,\n      nextParams: matches[matches.length - 1].params,\n      ...submission,\n      actionResult,\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      defaultShouldRevalidate: isRevalidationRequired,\n    });\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: Parameters<ShouldRevalidateFunction>[0]\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  isStaticRequest: boolean = false,\n  isRouteRequest: boolean = false,\n  requestContext?: unknown\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({ request, params: match.params, context: requestContext }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([\n          runHandler(handler),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType, formData } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    init.body =\n      formEncType === \"application/x-www-form-urlencoded\"\n        ? convertFormDataToSearchParams(formData)\n        : formData;\n  }\n\n  // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results: DataResult[]): RedirectResult | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // No hash -> hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // current hash -> same hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // current hash -> new hash\n    return true;\n  }\n\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n//#endregion\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
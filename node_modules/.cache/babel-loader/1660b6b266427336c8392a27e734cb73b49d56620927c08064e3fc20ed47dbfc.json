{"ast":null,"code":"/**\n * Delegate to handle a media query being matched and unmatched.\n *\n * @param {object} options\n * @param {function} options.match callback for when the media query is matched\n * @param {function} [options.unmatch] callback for when the media query is unmatched\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\n * @constructor\n */function QueryHandler(options){this.options=options;!options.deferSetup&&this.setup();}QueryHandler.prototype={constructor:QueryHandler,/**\n     * coordinates setup of the handler\n     *\n     * @function\n     */setup:function setup(){if(this.options.setup){this.options.setup();}this.initialised=true;},/**\n     * coordinates setup and triggering of the handler\n     *\n     * @function\n     */on:function on(){!this.initialised&&this.setup();this.options.match&&this.options.match();},/**\n     * coordinates the unmatch event for the handler\n     *\n     * @function\n     */off:function off(){this.options.unmatch&&this.options.unmatch();},/**\n     * called when a handler is to be destroyed.\n     * delegates to the destroy or unmatch callbacks, depending on availability.\n     *\n     * @function\n     */destroy:function destroy(){this.options.destroy?this.options.destroy():this.off();},/**\n     * determines equality by reference.\n     * if object is supplied compare options, if function, compare match callback\n     *\n     * @function\n     * @param {object || function} [target] the target for comparison\n     */equals:function equals(target){return this.options===target||this.options.match===target;}};module.exports=QueryHandler;","map":{"version":3,"names":["QueryHandler","options","deferSetup","setup","prototype","constructor","initialised","on","match","off","unmatch","destroy","equals","target","module","exports"],"sources":["/home/kubigor/projects/business_website/src/node_modules/enquire.js/src/QueryHandler.js"],"sourcesContent":["/**\n * Delegate to handle a media query being matched and unmatched.\n *\n * @param {object} options\n * @param {function} options.match callback for when the media query is matched\n * @param {function} [options.unmatch] callback for when the media query is unmatched\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\n * @constructor\n */\nfunction QueryHandler(options) {\n    this.options = options;\n    !options.deferSetup && this.setup();\n}\n\nQueryHandler.prototype = {\n\n    constructor : QueryHandler,\n\n    /**\n     * coordinates setup of the handler\n     *\n     * @function\n     */\n    setup : function() {\n        if(this.options.setup) {\n            this.options.setup();\n        }\n        this.initialised = true;\n    },\n\n    /**\n     * coordinates setup and triggering of the handler\n     *\n     * @function\n     */\n    on : function() {\n        !this.initialised && this.setup();\n        this.options.match && this.options.match();\n    },\n\n    /**\n     * coordinates the unmatch event for the handler\n     *\n     * @function\n     */\n    off : function() {\n        this.options.unmatch && this.options.unmatch();\n    },\n\n    /**\n     * called when a handler is to be destroyed.\n     * delegates to the destroy or unmatch callbacks, depending on availability.\n     *\n     * @function\n     */\n    destroy : function() {\n        this.options.destroy ? this.options.destroy() : this.off();\n    },\n\n    /**\n     * determines equality by reference.\n     * if object is supplied compare options, if function, compare match callback\n     *\n     * @function\n     * @param {object || function} [target] the target for comparison\n     */\n    equals : function(target) {\n        return this.options === target || this.options.match === target;\n    }\n\n};\n\nmodule.exports = QueryHandler;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAA,YAAYA,CAACC,OAAO,CAAE,CAC3B,IAAI,CAACA,OAAO,CAAGA,OAAO,CACtB,CAACA,OAAO,CAACC,UAAU,EAAI,IAAI,CAACC,KAAK,CAAC,CAAC,CACvC,CAEAH,YAAY,CAACI,SAAS,CAAG,CAErBC,WAAW,CAAGL,YAAY,CAE1B;AACJ;AACA;AACA;AACA,OACIG,KAAK,CAAG,SAAAA,MAAA,CAAW,CACf,GAAG,IAAI,CAACF,OAAO,CAACE,KAAK,CAAE,CACnB,IAAI,CAACF,OAAO,CAACE,KAAK,CAAC,CAAC,CACxB,CACA,IAAI,CAACG,WAAW,CAAG,IAAI,CAC3B,CAAC,CAED;AACJ;AACA;AACA;AACA,OACIC,EAAE,CAAG,SAAAA,GAAA,CAAW,CACZ,CAAC,IAAI,CAACD,WAAW,EAAI,IAAI,CAACH,KAAK,CAAC,CAAC,CACjC,IAAI,CAACF,OAAO,CAACO,KAAK,EAAI,IAAI,CAACP,OAAO,CAACO,KAAK,CAAC,CAAC,CAC9C,CAAC,CAED;AACJ;AACA;AACA;AACA,OACIC,GAAG,CAAG,SAAAA,IAAA,CAAW,CACb,IAAI,CAACR,OAAO,CAACS,OAAO,EAAI,IAAI,CAACT,OAAO,CAACS,OAAO,CAAC,CAAC,CAClD,CAAC,CAED;AACJ;AACA;AACA;AACA;AACA,OACIC,OAAO,CAAG,SAAAA,QAAA,CAAW,CACjB,IAAI,CAACV,OAAO,CAACU,OAAO,CAAG,IAAI,CAACV,OAAO,CAACU,OAAO,CAAC,CAAC,CAAG,IAAI,CAACF,GAAG,CAAC,CAAC,CAC9D,CAAC,CAED;AACJ;AACA;AACA;AACA;AACA;AACA,OACIG,MAAM,CAAG,SAAAA,OAASC,MAAM,CAAE,CACtB,MAAO,KAAI,CAACZ,OAAO,GAAKY,MAAM,EAAI,IAAI,CAACZ,OAAO,CAACO,KAAK,GAAKK,MAAM,CACnE,CAEJ,CAAC,CAEDC,MAAM,CAACC,OAAO,CAAGf,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}